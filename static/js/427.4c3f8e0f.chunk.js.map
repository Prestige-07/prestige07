{"version":3,"file":"static/js/427.4c3f8e0f.chunk.js","mappings":"mUAEaA,EAAgBC,EAAAA,EAAAA,IAAH,8UAmBbC,EAAiBD,EAAAA,EAAAA,IAAH,uMAWdE,EAAkBF,EAAAA,EAAAA,IAAH,+JASfG,EAAUH,EAAAA,EAAAA,QAAH,yKAEA,SAAAI,GAAK,OAAIA,EAAMC,eAAN,MAAJ,IAIH,SAAAD,GAAK,OAAIA,EAAMC,eAAN,MAAJ,IAIdC,EAAeN,EAAAA,EAAAA,GAAH,4OAeZO,EAAaP,EAAAA,EAAAA,OAAH,ykBACX,SAAAI,GAAK,OAAIA,EAAMI,QAAN,QAAJ,IAIN,SAAAJ,GAAK,OAAKA,EAAMK,MAAQL,EAAMK,MAAQ,oBAAjC,IAuBHC,EAAiBV,EAAAA,EAAAA,EAAH,4pB,2HCR3B,UA3EkB,WAChB,IAAMW,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,KAE/BC,EAAAA,EAAAA,YAAU,WACJH,GACFF,EAAS,SAEZ,GAAE,CAACE,EAAYF,IAEhB,IAAMM,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAU,SAAAC,GACRd,GAASe,EAAAA,EAAAA,IAAMD,GAChB,IAGH,OACE,gBACEE,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,SALZ,UAQE,kBACEP,SAAUL,EAAOa,aACjBL,MAAO,CACLC,QAAS,OACTK,cAAe,SACfC,UAAW,SACXC,IAAK,OACLC,QAAS,OACT3B,MAAO,QACP4B,gBAAiB,QACjBC,aAAc,QAVlB,WAaE,SAAC,IAAD,CACEC,UAAQ,EACRC,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,MAAM,8FACNC,MAAOzB,EAAOM,OAAOH,MACrBuB,SAAU1B,EAAO2B,aACjBC,QAAQ,WACRC,UAAU,WAGZ,SAAC,IAAD,CACET,UAAQ,EACRC,KAAK,OACLC,GAAG,WACHC,KAAK,WACLC,MAAM,uCACNC,MAAOzB,EAAOM,OAAOF,SACrBsB,SAAU1B,EAAO2B,aACjBC,QAAQ,WACRC,UAAU,WAGZ,SAAC,KAAD,CAAYR,KAAK,SAAS/B,MAAM,qBAAhC,SAAqD,6CAM5D,C,wGCpFM,IAOMQ,EAAmB,SAAAgC,GAAK,OAAIA,EAAMC,KAAKnC,UAAf,EAExBoC,EAAa,SAAAF,GAAK,OAAIA,EAAMC,KAAKE,IAAf,EAMlBC,EAAuB,SAAAJ,GAAK,OAAIA,EAAMC,KAAKI,cAAf,C","sources":["components/Global/Global.styled.jsx","pages/Login/Login.jsx","redux/auth/authSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 15px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 60px;\n  padding-bottom: ${props => props.paddingBottom && `60px`};\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: ${props => props.paddingBottom && `80px`};\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 11px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 11px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { TextField } from '@mui/material';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { login } from 'redux/auth/authOperations';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/admin');\n    }\n  }, [isLoggedIn, navigate]);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      dispatch(login(values));\n    },\n  });\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n      }}\n    >\n      <form\n        onSubmit={formik.handleSubmit}\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          textAlign: 'center',\n          gap: '30px',\n          padding: '50px',\n          color: 'black',\n          backgroundColor: 'white',\n          borderRadius: '12px',\n        }}\n      >\n        <TextField\n          required\n          type=\"text\"\n          id=\"email\"\n          name=\"email\"\n          label=\"Електронна пошта\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          variant=\"standard\"\n          className=\"field\"\n        />\n\n        <TextField\n          required\n          type=\"text\"\n          id=\"password\"\n          name=\"password\"\n          label=\"Пароль\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          variant=\"standard\"\n          className=\"field\"\n        />\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\">\n          Увійти\n        </MainButton>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export const selectAuth = state => {\n  const { isLoggedIn, token } = state.auth;\n  return { isLoggedIn, token };\n};\n\nexport const selectIsAuthLoading = state => state.auth.isLoading;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectError = state => state.auth.error;\n\nexport const selectToken = state => state.auth.token;\n\nexport const selectAdministrators = state => state.auth.administrators;\n\n// export const selectUserAvatar = state => state.auth.user.avatarURL;\n\n// export const selectIsRefreshing = state => state.auth.isRefreshing;\n\n// export const selectIsLoading = state => state.auth.isLoading;\n\n// export const selectUserId = state => state.auth.user.id;\n"],"names":["MainContainer","styled","AdminContainer","HeaderContainer","Section","props","paddingBottom","SectionTitle","MainButton","margin","color","MainLinkButton","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","selectIsLoggedIn","useEffect","formik","useFormik","initialValues","email","password","onSubmit","values","login","style","display","justifyContent","alignItems","height","handleSubmit","flexDirection","textAlign","gap","padding","backgroundColor","borderRadius","required","type","id","name","label","value","onChange","handleChange","variant","className","state","auth","selectUser","user","selectAdministrators","administrators"],"sourceRoot":""}