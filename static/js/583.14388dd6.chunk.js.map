{"version":3,"file":"static/js/583.14388dd6.chunk.js","mappings":"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","sources":["components/Global/Global.styled.jsx","components/AdminPage/Sidebar/Sidebar.styled.jsx","components/AdminPage/Sidebar/Sidebar.jsx","components/AdminPage/MobileAdminMenu/MobileAdminMenu.styled.jsx","components/AdminPage/MobileAdminMenu/MobileAdminMenu.jsx","pages/Admin/Admin.jsx","redux/auth/authSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 15px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 40px;\n  // padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    // padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 11px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 11px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { FiUser } from 'react-icons/fi';\nimport { GiExitDoor } from 'react-icons/gi';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  width: 300px;\n  height: 100vh;\n  background-color: var(--secondary-bg-color);\n\n  @media screen and (max-width: 767px) {\n    display: none;\n  }\n`;\n\nexport const UserWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  column-gap: 12px;\n  margin-bottom: 80px;\n`;\n\nexport const UserIcon = styled(FiUser)`\n  width: 40px;\n  height: 40px;\n  color: var(--accent-color);\n  background-color: var(--admin-items-bg-color);\n  border-radius: 8px;\n`;\n\nexport const UserName = styled.p`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n`;\n\nexport const Logout = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const LogoutIcon = styled(GiExitDoor)`\n  width: 40px;\n  height: 40px;\n  color: red;\n`;\n\nexport const NavigationWrapper = styled.nav``;\n\nexport const NavigationList = styled.ul`\n  list-style: none;\n`;\n\nexport const NavigationItem = styled.li``;\n\nexport const PageLink = styled(NavLink)`\n  display: block;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n\n  color: #ffffff;\n\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  border-radius: 12px;\n\n  &.active {\n    color: var(--accent-color);\n    background-color: var(--admin-items-bg-color);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { logout } from 'redux/auth/authOperations';\nimport { selectUser } from 'redux/auth/authSelectors';\n\nimport {\n  Wrapper,\n  UserWrapper,\n  UserIcon,\n  UserName,\n  Logout,\n  LogoutIcon,\n  NavigationWrapper,\n  NavigationList,\n  NavigationItem,\n  PageLink,\n} from './Sidebar.styled';\n\nexport const Sidebar = () => {\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  return (\n    <Wrapper>\n      <UserWrapper>\n        <UserIcon />\n        <UserName>{user.name}</UserName>\n        <Logout type=\"button\" onClick={() => dispatch(logout())}>\n          <LogoutIcon />\n        </Logout>\n      </UserWrapper>\n\n      <NavigationWrapper>\n        <NavigationList>\n          <NavigationItem>\n            <PageLink to=\"orders\" className=\"sidebar__item\">\n              Замовлення\n            </PageLink>\n          </NavigationItem>\n          <NavigationItem>\n            <PageLink to=\"gallery\" className=\"sidebar__item\">\n              Галерея зображень\n            </PageLink>\n          </NavigationItem>\n          <NavigationItem>\n            <PageLink to=\"employees\" className=\"sidebar__item\">\n              Працівники\n            </PageLink>\n          </NavigationItem>\n          <NavigationItem>\n            <PageLink to=\"services\" className=\"sidebar__item\">\n              Послуги\n            </PageLink>\n          </NavigationItem>\n          <NavigationItem>\n            <PageLink to=\"reports\" className=\"sidebar__item\">\n              Звітність\n            </PageLink>\n          </NavigationItem>\n        </NavigationList>\n      </NavigationWrapper>\n    </Wrapper>\n  );\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { FiUser } from 'react-icons/fi';\nimport { Spin } from 'hamburger-react';\nimport { GiExitDoor } from 'react-icons/gi';\n\nexport const MenuWrapper = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 10;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100vh;\n  background-color: var(--primary-bg-color);\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const UserWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n\nexport const UserName = styled.p`\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  border-radius: 12px;\n`;\n\nexport const UserIcon = styled(FiUser)`\n  width: 40px;\n  height: 40px;\n  color: var(--accent-color);\n  background-color: var(--admin-items-bg-color);\n  border-radius: 8px;\n`;\n\nexport const Logout = styled.button`\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n\nexport const LogoutIcon = styled(GiExitDoor)`\n  width: 40px;\n  height: 40px;\n  color: red;\n`;\n\nexport const NavigationWrapper = styled.nav``;\n\nexport const NavigationList = styled.ul`\n  list-style: none;\n`;\n\nexport const NavigationItem = styled.li``;\n\nexport const PageLink = styled(NavLink)`\n  display: block;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  text-align: center;\n  width: 100vh;\n\n  color: #ffffff;\n\n  font-weight: 400;\n  font-size: 20px;\n  line-height: 1.14;\n  letter-spacing: 0.02em;\n  border-radius: 12px;\n\n  &.active {\n    color: var(--accent-color);\n    background-color: var(--admin-items-bg-color);\n  }\n`;\n\nexport const MenuButton = styled.button`\n  position: fixed;\n  top: 10px;\n  left: 10px;\n  z-index: 100;\n  padding: 0;\n\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const MenuIcon = styled(Spin)``;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  MenuWrapper,\n  UserWrapper,\n  UserName,\n  Logout,\n  LogoutIcon,\n  NavigationWrapper,\n  NavigationList,\n  NavigationItem,\n  PageLink,\n  UserIcon,\n  MenuButton,\n  MenuIcon,\n} from './MobileAdminMenu.styled';\nimport { logout } from 'redux/auth/authOperations';\nimport { selectUser } from 'redux/auth/authSelectors';\n\nexport const MobileAdminMenu = () => {\n  const [isOpenMenu, setOpenMenu] = useState(false);\n  const user = useSelector(selectUser);\n\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <MenuButton type=\"button\">\n        <MenuIcon\n          toggled={isOpenMenu}\n          toggle={setOpenMenu}\n          rounded\n          label=\"Розгорнути меню\"\n          size={24}\n          color=\"var(--accent-color)\"\n          distance=\"lg\"\n          duration={0.7}\n        />\n      </MenuButton>\n\n      {isOpenMenu && (\n        <MenuWrapper>\n          <UserWrapper>\n            <UserIcon />\n            <UserName>{user.name}</UserName>\n            <Logout type=\"button\" onClick={() => dispatch(logout())}>\n              <LogoutIcon />\n            </Logout>\n          </UserWrapper>\n\n          <NavigationWrapper>\n            <NavigationList>\n              <NavigationItem>\n                <PageLink to=\"orders\" onClick={() => setOpenMenu(false)}>\n                  Замовлення\n                </PageLink>\n              </NavigationItem>\n              <NavigationItem>\n                <PageLink to=\"gallery\" onClick={() => setOpenMenu(false)}>\n                  Галерея зображень\n                </PageLink>\n              </NavigationItem>\n              <NavigationItem>\n                <PageLink to=\"employees\" onClick={() => setOpenMenu(false)}>\n                  Працівники\n                </PageLink>\n              </NavigationItem>\n              <NavigationItem>\n                <PageLink to=\"services\" onClick={() => setOpenMenu(false)}>\n                  Послуги\n                </PageLink>\n              </NavigationItem>\n              <NavigationItem>\n                <PageLink to=\"reports\" onClick={() => setOpenMenu(false)}>\n                  Звітність\n                </PageLink>\n              </NavigationItem>\n            </NavigationList>\n          </NavigationWrapper>\n        </MenuWrapper>\n      )}\n    </>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { Sidebar } from 'components/AdminPage/Sidebar/Sidebar';\nimport { AdminContainer } from 'components/Global/Global.styled';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { getCurrentUser } from 'redux/auth/authOperations';\nimport { MobileAdminMenu } from 'components/AdminPage/MobileAdminMenu/MobileAdminMenu';\n\nconst Admin = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const LocalStoreToken = localStorage.getItem('persist:auth');\n    if (LocalStoreToken) {\n      dispatch(getCurrentUser())\n        .then(() => {\n          setIsLoading(false);\n        })\n        .catch(error => {\n          alert('Error refreshing token:', error);\n          setIsLoading(false);\n        });\n    } else {\n      setIsLoading(false);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!isLoading && !isLoggedIn) {\n      navigate('/login');\n    }\n  }, [isLoading, isLoggedIn, navigate]);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <MobileAdminMenu />\n      <Sidebar />\n      <AdminContainer>\n        <Outlet />\n      </AdminContainer>\n    </div>\n  );\n};\n\nexport default Admin;\n","export const selectAuth = state => {\n  const { isLoggedIn, token } = state.auth;\n  return { isLoggedIn, token };\n};\n\nexport const selectIsAuthLoading = state => state.auth.isLoading;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectError = state => state.auth.error;\n\nexport const selectToken = state => state.auth.token;\n\nexport const selectAdministrators = state => state.auth.administrators;\n\n// export const selectUserAvatar = state => state.auth.user.avatarURL;\n\n// export const selectIsRefreshing = state => state.auth.isRefreshing;\n\n// export const selectIsLoading = state => state.auth.isLoading;\n\n// export const selectUserId = state => state.auth.user.id;\n"],"names":["MainContainer","styled","AdminContainer","HeaderContainer","Section","SectionTitle","MainButton","props","margin","color","MainLinkButton","Wrapper","UserWrapper","UserIcon","FiUser","UserName","Logout","LogoutIcon","GiExitDoor","NavigationWrapper","NavigationList","NavigationItem","PageLink","NavLink","Sidebar","user","useSelector","selectUser","dispatch","useDispatch","name","type","onClick","logout","to","className","MenuWrapper","MenuButton","MenuIcon","Spin","MobileAdminMenu","useState","isOpenMenu","setOpenMenu","toggled","toggle","rounded","label","size","distance","duration","isLoading","setIsLoading","isLoggedIn","selectIsLoggedIn","navigate","useNavigate","useEffect","localStorage","getItem","getCurrentUser","then","catch","error","alert","Loading","style","display","state","auth","selectAdministrators","administrators"],"sourceRoot":""}