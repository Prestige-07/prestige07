{"version":3,"file":"static/js/550.b9ea230a.chunk.js","mappings":"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","sources":["components/AdminPage/Modals/ModalLayout.jsx","components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/AdminPage/Modals/ModalAddService/ModalAddService.jsx","pages/Services/Services.jsx","redux/services/servicesSelectors.js"],"sourcesContent":["import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  color: var(--label-color);\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n  // max-width: 1200px;\n\n  // margin-left: auto;\n  // margin-right: auto;\n  // padding-left: 15px;\n  // padding-right: 15px;\n\n  // @media screen and (min-width: 480px) {\n  //   max-width: 480px;\n  // }\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 768px;\n  // }\n\n  // @media screen and (min-width: 1200px) {\n  //   max-width: 1200px;\n  // }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 15px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 60px;\n  padding-bottom: 60px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\ntext - align: center;\n  // margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    // margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport {\n  Form,\n  Label,\n  FormSelect,\n  Input,\n  FormCheckbox,\n  SelectOption,\n} from '../../../Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addService } from 'redux/services/servicesOperations';\n\nexport const ModalAddService = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      category: '',\n      name: '',\n      price: '',\n      pricePerMeter: false,\n      employeePercent: '',\n    },\n    onSubmit: values => {\n      dispatch(addService(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n    >\n      <Title>Додати послугу</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label id=\"category-label\">Оберіть об'єкт послуги</Label>\n        <FormSelect\n          required\n          labelId=\"category-label\"\n          id=\"category\"\n          name=\"category\"\n          value={formik.values.category}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n        >\n          <SelectOption value=\"Авто\">Авто</SelectOption>\n          <SelectOption value=\"Килим\">Килим</SelectOption>\n        </FormSelect>\n\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Назва послуги\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n        />\n        <Input\n          required\n          type=\"text\"\n          id=\"price\"\n          name=\"price\"\n          label=\"Ціна послуги\"\n          value={formik.values.price}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n        />\n        <Label>\n          <FormCheckbox\n            checked={formik.values.pricePerMeter}\n            onChange={() =>\n              formik.setFieldValue(\n                'pricePerMeter',\n                !formik.values.pricePerMeter\n              )\n            }\n          />\n          Ціна за м²\n        </Label>\n        <Input\n          required\n          type=\"number\"\n          inputProps={{ min: '0' }}\n          id=\"employeePercent\"\n          name=\"employeePercent\"\n          label=\"Відсоток працівнику\"\n          value={formik.values.employeePercent}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n        />\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  HeaderContainer,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { ModalAddService } from 'components/AdminPage/Modals/ModalAddService/ModalAddService';\n\nimport { getAllServices } from 'redux/services/servicesOperations';\nimport { selectGetAllServices } from 'redux/services/servicesSelectors';\n\nconst ServicesPage = () => {\n  const services = useSelector(selectGetAllServices);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllServices());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <Section>\n      <HeaderContainer>\n        <SectionTitle>Послуги</SectionTitle>\n        <MainButton type=\"button\" onClick={() => setOpenModal(true)}>\n          Додати послугу\n        </MainButton>\n      </HeaderContainer>\n\n      <ul\n        className=\"list\"\n        style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}\n      >\n        {services.map(service => (\n          <li key={service._id}>\n            <p>{`Об'єкт послуги: ${service.category}`}</p>\n            <p>{`Назва послуги: ${service.name}`}</p>\n            <p>{`Вартість: ${service.price} грн${\n              service.pricePerMeter ? '/м²' : ''\n            }`}</p>\n            <p>{`Відсоток працівника: ${service.employeePercent}%`}</p>\n          </li>\n        ))}\n      </ul>\n      {isOpenModal && <ModalAddService handleExitModal={handleExitModal} />}\n    </Section>\n  );\n};\n\nexport default ServicesPage;\n","export const selectGetAllServices = state => state.services.items;\n\nexport const selectIsLoadingServices = state => state.services.isLoading;\n"],"names":["ModalLayout","props","onClick","e","handleBackdropClick","handleExitModal","children","Form","styled","Label","LabelText","Input","TextField","FormSelect","Select","SelectOption","MenuItem","FormCheckbox","Checkbox","AdminContainer","HeaderContainer","Section","SectionTitle","MainButton","margin","color","ModalAddService","dispatch","useDispatch","formik","useFormik","initialValues","category","name","price","pricePerMeter","employeePercent","onSubmit","values","addService","target","currentTarget","handleSubmit","id","required","labelId","value","onChange","handleChange","variant","type","label","checked","setFieldValue","inputProps","min","services","useSelector","selectGetAllServices","useState","isOpenModal","setOpenModal","useEffect","getAllServices","className","style","display","flexDirection","gap","map","service","_id","state","items"],"sourceRoot":""}