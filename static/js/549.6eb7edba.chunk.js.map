{"version":3,"file":"static/js/549.6eb7edba.chunk.js","mappings":"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","sources":["components/Global/Global.styled.jsx","redux/reporting/reportingSelectors.js","components/AdminPage/ReportPage/ReportTable/ReportTable.styled.jsx","components/AdminPage/ReportPage/ReportTable/ReportTable.jsx","components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm.styled.jsx","components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm.jsx","pages/Report/Report.jsx","utils/formatedDate.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n  // max-width: 1200px;\n\n  // margin-left: auto;\n  // margin-right: auto;\n  // padding-left: 15px;\n  // padding-right: 15px;\n\n  // @media screen and (min-width: 480px) {\n  //   max-width: 480px;\n  // }\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 768px;\n  // }\n\n  // @media screen and (min-width: 1200px) {\n  //   max-width: 1200px;\n  // }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 40px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 60px;\n  padding-bottom: 60px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\ntext - align: center;\n  // margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    // margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n","export const selectOrders = state => state.reports.items;\n\nexport const selectEmployees = state => state.reports.employees;\n\nexport const selectPayments = state => state.reports.payments;\n\nexport const selectIsLoading = state => state.reports.isLoading;\n\nexport const selectError = state => state.reports.error;\n","import styled from '@emotion/styled';\n\nexport const TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow-x: auto;\n  max-width: 100%;\n`;\n\nexport const TableThumb = styled.div`\n  flex-basis: calc(50% - 10px);\n  margin-top: 20px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  background-color: #f4f4f4;\n  color: black;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const TableHead = styled.thead`\n  background-color: #0073e6;\n  color: #fff;\n  text-align: left;\n`;\n\nexport const TableRow = styled.tr`\n  &:nth-of-type(even) {\n    background-color: #e6e6e6;\n  }\n`;\n\nexport const TableHeader = styled.th`\n  padding: 10px;\n`;\n\nexport const TableData = styled.td`\n  padding: 10px;\n`;\n\nexport const TableCellServices = styled.td`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    margin: 0;\n    padding: 5px 0;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectOrders,\n  selectEmployees,\n  selectPayments,\n} from 'redux/reporting/reportingSelectors';\n\nimport { formatedDate } from 'utils/formatedDate';\n\nimport {\n  TableContainer,\n  TableThumb,\n  FlexContainer,\n  Title,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  TableCellServices,\n} from './ReportTable.styled';\n\nexport const ReportingTable = () => {\n  const orders = useSelector(selectOrders);\n  const employees = useSelector(selectEmployees);\n  const payments = useSelector(selectPayments);\n\n  return (\n    <TableContainer>\n      {orders && orders.length > 0 && (\n        <>\n          <Title>Звітність за обраний період</Title>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>Час заїзду</TableHeader>\n                <TableHeader>Марка ДНЗ</TableHeader>\n                <TableHeader>Контакти клієнта</TableHeader>\n                <TableHeader>Послуги</TableHeader>\n                <TableHeader>Вартість, грн</TableHeader>\n                <TableHeader>Спосіб оплати</TableHeader>\n                <TableHeader>Адміністратор</TableHeader>\n                <TableHeader>Працівник</TableHeader>\n              </TableRow>\n            </TableHead>\n            <tbody>\n              {orders.map(order => (\n                <TableRow key={order._id}>\n                  <TableData>{formatedDate(order.orderDate)}</TableData>\n                  <TableData>{order.serviceObject}</TableData>\n                  <TableData>{order.clientPhone}</TableData>\n                  <TableCellServices>\n                    {order.services.map(service => (\n                      <p key={service._id}>{service.name}</p>\n                    ))}\n                  </TableCellServices>\n                  <TableData>{order.discountedCostOrder}</TableData>\n                  <TableData>{order.payment}</TableData>\n                  <TableData>{order.administrator}</TableData>\n                  <TableData>{order.washer}</TableData>\n                </TableRow>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      )}\n      <FlexContainer>\n        {employees && employees.length > 0 && (\n          <TableThumb>\n            <Title>Заробітна плата</Title>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableHeader>Ім'я</TableHeader>\n                  <TableHeader>грн</TableHeader>\n                </TableRow>\n              </TableHead>\n              <tbody>\n                {employees.map(employee => (\n                  <TableRow key={employee.name}>\n                    <TableData>{employee.name}</TableData>\n                    <TableData>{employee.payment}</TableData>\n                  </TableRow>\n                ))}\n              </tbody>\n            </Table>\n          </TableThumb>\n        )}\n        {payments && (\n          <TableThumb>\n            <Title>Розрахунок</Title>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableHeader>Категорія</TableHeader>\n                  <TableHeader>грн</TableHeader>\n                </TableRow>\n              </TableHead>\n              <tbody>\n                <TableRow>\n                  <TableData>Всього каса:</TableData>\n                  <TableData>{payments.totalPayments}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього готівкою:</TableData>\n                  <TableData>{payments.totalCash}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього терміналом:</TableData>\n                  <TableData>{payments.totalCard}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього заробітна плата:</TableData>\n                  <TableData>{payments.totalEmployeesPayments}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Дохід:</TableData>\n                  <TableData>{payments.profit}</TableData>\n                </TableRow>\n              </tbody>\n            </Table>\n          </TableThumb>\n        )}\n      </FlexContainer>\n    </TableContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: center;\n  gap: 30px;\n  padding: 25px;\n  margin-bottom: 40px;\n  color: var(--black-color);\n  background-color: var(--white-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const DateLabel = styled.label``;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { getReportingByDates } from 'redux/reporting/reportingOperations';\n\nimport { MainButton } from 'components/Global/Global.styled';\nimport { SearchForm, DateLabel, Input } from './ReportSearchForm.styled';\n\nexport const ReportSearchForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      startDate: '',\n      endDate: '',\n    },\n    onSubmit: values => {\n      dispatch(getReportingByDates(values));\n    },\n  });\n  return (\n    <SearchForm onSubmit={formik.handleSubmit}>\n      <DateLabel>\n        Початок\n        <Input\n          required\n          type=\"date\"\n          id=\"startDate\"\n          name=\"startDate\"\n          value={formik.values.startDate}\n          onChange={formik.handleChange}\n          variant=\"standard\"\n          className=\"field\"\n        />\n      </DateLabel>\n      <DateLabel>\n        Кінець\n        <Input\n          required\n          type=\"date\"\n          id=\"endDate\"\n          name=\"endDate\"\n          value={formik.values.endDate}\n          onChange={formik.handleChange}\n          variant=\"standard\"\n          className=\"field\"\n        />\n      </DateLabel>\n      <MainButton type=\"submit\" color=\"var(--black-color)\">\n        Пошук\n      </MainButton>\n    </SearchForm>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { Section } from 'components/Global/Global.styled';\nimport { Loading } from 'components/Loading/Loading';\nimport { ReportingTable } from 'components/AdminPage/ReportPage/ReportTable/ReportTable';\nimport { ReportSearchForm } from 'components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm';\n\nimport { selectIsLoading } from 'redux/reporting/reportingSelectors';\n\nconst ReportingPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <Section>\n      <ReportSearchForm />\n      <ReportingTable />\n    </Section>\n  );\n};\n\nexport default ReportingPage;\n","export function formatedDate(unformatedDate) {\n  const dateTime = new Date(unformatedDate);\n\n  const date = dateTime.toLocaleDateString('uk-UA', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  });\n\n  const time = dateTime.toLocaleTimeString('uk-UA', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return `${date} ${time}`;\n}\n"],"names":["AdminContainer","styled","HeaderContainer","Section","SectionTitle","MainButton","props","margin","color","selectOrders","state","reports","items","selectEmployees","employees","selectPayments","payments","selectIsLoading","isLoading","TableContainer","TableThumb","FlexContainer","Title","Table","TableHead","TableRow","TableHeader","TableData","TableCellServices","ReportingTable","orders","useSelector","length","map","order","formatedDate","orderDate","serviceObject","clientPhone","services","service","name","_id","discountedCostOrder","payment","administrator","washer","employee","totalPayments","totalCash","totalCard","totalEmployeesPayments","profit","SearchForm","DateLabel","Input","TextField","ReportSearchForm","dispatch","useDispatch","formik","useFormik","initialValues","startDate","endDate","onSubmit","values","getReportingByDates","handleSubmit","required","type","id","value","onChange","handleChange","variant","className","Loading","unformatedDate","dateTime","Date","date","toLocaleDateString","day","month","year","time","toLocaleTimeString","hour","minute"],"sourceRoot":""}