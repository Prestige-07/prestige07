{"version":3,"file":"static/js/468.7026e90a.chunk.js","mappings":"8PAGqBA,EAAAA,EAAOC,GAAEC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8FAAvB,MAOMC,EAAOJ,EAAAA,EAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6JAUlBI,EAAQP,EAAAA,EAAOQ,MAAKC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gGAOpBO,EAAYV,EAAAA,EAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,iCAIpBU,GAAQb,EAAAA,EAAAA,GAAOc,EAAAA,EAAPd,CAAiBe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,0BAIzBa,GAAahB,EAAAA,EAAAA,GAAOiB,EAAAA,EAAPjB,CAAckB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,0BAI3BgB,GAAenB,EAAAA,EAAAA,GAAOoB,EAAAA,EAAPpB,CAAgBqB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,QAE/BmB,GAAetB,EAAAA,EAAAA,GAAOuB,EAAAA,EAAPvB,CAAgBwB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,O,mHCvCrC,MAAMsB,EAAgBzB,EAAAA,EAAO0B,IAAGxB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+QAiB1BwB,EAAiB3B,EAAAA,EAAO0B,IAAGpB,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2LAW3ByB,EAAU5B,EAAAA,EAAO6B,QAAOpB,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,wGAEjB2B,GAASA,EAAMC,eAAa,SAInCC,EAAehC,EAAAA,EAAOiC,GAAErB,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,8NAexB+B,EAAalC,EAAAA,EAAOmC,OAAMpB,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,gjBACnC2B,GACAA,EAAMM,UAAQ,8DAMNN,GAASA,EAAMO,QAAM,WAItBP,GAAUA,EAAMQ,MAAQR,EAAMQ,MAAQ,uBAuBpCC,EAAiBvC,EAAAA,EAAOwC,EAACtB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,ynB,6HCnF/B,MAAMsC,EAAWzC,EAAAA,EAAO0B,IAAGxB,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+cAmBlB2B,GAAUA,EAAMY,OAAS,UAAY,WACxCZ,GAAUA,EAAMY,OAAS,IAAM,MACxBZ,GAAUA,EAAMY,OAAS,OAAS,SACvCZ,GAAUA,EAAMY,OAAS,WAAa,eAGxCC,EAAQ3C,EAAAA,EAAO0B,IAAGpB,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2VAqBlByC,EAAQ5C,EAAAA,EAAOC,GAAEQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,8FAOjB0C,EAAO7C,EAAAA,EAAOW,EAACC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,mFAMf2C,EAAc9C,EAAAA,EAAOmC,OAAMpB,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,oIAW3B4C,GAAY/C,EAAAA,EAAAA,GAAOgD,EAAAA,IAAPhD,CAAsBkB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,0C,yDCvExC,MAAM8C,EAAcnB,IAEvBoB,EAAAA,EAAAA,KAACT,EAAAA,GAAQ,CACPU,QAASC,IACPtB,EAAMuB,qBAAuBvB,EAAMuB,oBAAoBD,EAAE,EAE3DV,OAAQZ,EAAMY,OAAOY,UAErBC,EAAAA,EAAAA,MAACZ,EAAAA,GAAK,CAAAW,SAAA,EACJJ,EAAAA,EAAAA,KAACJ,EAAAA,GAAW,CAACK,QAASA,IAAMrB,EAAM0B,kBAAkBF,UAClDJ,EAAAA,EAAAA,KAACH,EAAAA,GAAS,MAEXjB,EAAMwB,a,gHCZR,MAAMG,EAAOzD,EAAAA,EAAO0D,GAAExD,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qEAMhBwD,EAAO3D,EAAAA,EAAO4D,GAAEtD,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,0OAchB0D,EAAa7D,EAAAA,EAAO0B,IAAGjB,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qKAWvB2D,EAAQ9D,EAAAA,EAAO+D,IAAGnD,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,QAElB6D,EAAahE,EAAAA,EAAOW,EAACI,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,mKAUrB8D,EAAejE,EAAAA,EAAOmC,OAAMjB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,qH,iCC9BlC,MAAM+D,EAAcA,KACzB,MAAMC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IACtBC,GAAWC,EAAAA,EAAAA,MAWjB,OACErB,EAAAA,EAAAA,KAACO,EAAI,CAAAH,SACFa,EAAQK,KAAIC,IACXlB,EAAAA,EAAAA,MAACI,EAAI,CAAAL,SAAA,EACHC,EAAAA,EAAAA,MAACM,EAAU,CAAAP,SAAA,EACTJ,EAAAA,EAAAA,KAACY,EAAK,CACJY,IAAKD,EAAKE,YAAYC,IACtBC,IAAKJ,EAAKE,YAAYE,KAAO,kEAE/B3B,EAAAA,EAAAA,KAACc,EAAU,CAAAV,SAAC,qBAEdC,EAAAA,EAAAA,MAACM,EAAU,CAAAP,SAAA,EACTJ,EAAAA,EAAAA,KAACY,EAAK,CACJY,IAAKD,EAAKK,WAAWF,IACrBC,IAAKJ,EAAKK,WAAWD,KAAO,kEAE9B3B,EAAAA,EAAAA,KAACc,EAAU,CAAAV,SAAC,uCAEdJ,EAAAA,EAAAA,KAACe,EAAY,CACXc,MAAM,mDACN5B,QAASA,KAAM6B,OA7BEC,EA6BiBR,EAAKS,SA5BzBC,OAAOC,QAC3B,oOAGAd,GAASe,EAAAA,EAAAA,IAAkBJ,KALJA,KA6B2B,EAAA3B,SAC7C,uDAlBQmB,EAAKS,QAuBb,E,4CC3CJ,MAAMI,EAAiBxD,IAC5B,MAAOyD,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,OAC9BC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,MAE7BnB,GAAWC,EAAAA,EAAAA,MAEXf,EAAkBA,KACtB1B,EAAM0B,iBAAgB,EAAK,EAGvBoC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,UAAW,GACXC,SAAU,IAEZC,SAAUC,IACR,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUd,GAC1BY,EAASE,OAAO,QAASX,GACzBS,EAASE,OAAO,YAAaH,EAAOH,WACpCI,EAASE,OAAO,WAAYH,EAAOF,UACnC1B,GAASgC,EAAAA,EAAAA,IAAeH,IACxB3C,GAAiB,IAIrB,OACED,EAAAA,EAAAA,MAACN,EAAAA,EAAW,CAACO,gBAAiBA,EAAiBd,OAAQZ,EAAMY,OAAOY,SAAA,EAClEJ,EAAAA,EAAAA,KAACN,EAAAA,GAAK,CAAAU,SAAC,mEACPC,EAAAA,EAAAA,MAACnD,EAAAA,GAAI,CAAC6F,SAAUL,EAAOW,aAAajD,SAAA,EAClCC,EAAAA,EAAAA,MAAChD,EAAAA,GAAK,CAAA+C,SAAA,CAAC,yCAELJ,EAAAA,EAAAA,KAACrC,EAAAA,GAAK,CACJ2F,UAAQ,EACRC,KAAK,OACLxB,GAAG,cACHyB,KAAK,cACLC,MAAOf,EAAOM,OAAOvB,YACrBiC,SAAUxD,GAAKoC,EAAUpC,EAAEyD,cAAcC,MAAM,IAC/CC,QAAQ,WACRC,KAAK,cAGTzD,EAAAA,EAAAA,MAAChD,EAAAA,GAAK,CAAA+C,SAAA,CAAC,+FAELJ,EAAAA,EAAAA,KAACrC,EAAAA,GAAK,CACJ4F,KAAK,OACLxB,GAAG,YACHyB,KAAK,YACLC,MAAOf,EAAOM,OAAOH,UACrBa,SAAUhB,EAAOqB,aACjBF,QAAQ,WACRC,KAAK,cAGTzD,EAAAA,EAAAA,MAAChD,EAAAA,GAAK,CAAA+C,SAAA,CAAC,2DAELJ,EAAAA,EAAAA,KAACrC,EAAAA,GAAK,CACJ2F,UAAQ,EACRC,KAAK,OACLxB,GAAG,aACHyB,KAAK,aACLC,MAAOf,EAAOM,OAAOpB,WACrB8B,SAAUxD,GAAKuC,EAASvC,EAAEyD,cAAcC,MAAM,IAC9CC,QAAQ,WACRC,KAAK,cAGTzD,EAAAA,EAAAA,MAAChD,EAAAA,GAAK,CAAA+C,SAAA,CAAC,+FAELJ,EAAAA,EAAAA,KAACrC,EAAAA,GAAK,CACJ4F,KAAK,OACLxB,GAAG,WACHyB,KAAK,WACLC,MAAOf,EAAOM,OAAOF,SACrBY,SAAUhB,EAAOqB,aACjBF,QAAQ,WACRC,KAAK,cAGT9D,EAAAA,EAAAA,KAAChB,EAAAA,GAAU,CAACuE,KAAK,SAASnE,MAAM,qBAAqBD,QAAQ,EAAKiB,SAAC,8CAIzD,E,cChFlB,MA+BA,EA/BgB4D,KACd,MAAOC,EAAaC,IAAgB3B,EAAAA,EAAAA,WAAS,GACvC4B,GAAYjD,EAAAA,EAAAA,IAAYkD,EAAAA,IAExBhD,GAAWC,EAAAA,EAAAA,OAEjBgD,EAAAA,EAAAA,YAAU,KACRjD,GAASkD,EAAAA,EAAAA,MAAa,GACrB,CAAClD,IAMJ,OACEf,EAAAA,EAAAA,MAAC3B,EAAAA,GAAO,CAACG,eAAe,EAAKuB,SAAA,EAC3BJ,EAAAA,EAAAA,KAAChB,EAAAA,GAAU,CACTuE,KAAK,SACLtD,QAASA,IAAMiE,GAAa,GAC5BhF,UAAU,EAAKkB,SAChB,uGAGDJ,EAAAA,EAAAA,KAAClB,EAAAA,GAAY,CAAAsB,SAAC,uGACdJ,EAAAA,EAAAA,KAACgB,EAAW,KACZhB,EAAAA,EAAAA,KAACoC,EAAc,CAAC9B,gBAfIA,KACtB4D,GAAa,EAAM,EAciC1E,OAAQyE,IACzDE,IAAanE,EAAAA,EAAAA,KAACuE,EAAAA,EAAO,MACd,C,4CC1CP,MAAMpD,EAAgBqD,GAASA,EAAMvD,QAAQwD,MAEvCL,EAAkBI,GAASA,EAAMvD,QAAQkD,S","sources":["components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/Modals/Modal.styles.jsx","components/Modals/ModalLayout.jsx","components/AdminPage/GalleryPage/GalleryList/GalleryList.styled.jsx","components/AdminPage/GalleryPage/GalleryList/GalleryList.jsx","components/Modals/ModalAddPhotos/ModalAddPhotos.jsx","pages/Gallery/Gallery.jsx","redux/gallery/gallerySelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  max-width: 100%;\n  color: var(--label-color);\n  font-size: 12px;\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: var(--button-border);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border: var(--button-border);\n  border-radius: 25px;\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: var(--backdrop-color);\n  backdrop-filter: blur(10px);\n\n  transition: transform var(--transition), opacity var(--transition),\n    visibility var(--transition);\n\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  transform: ${props => (props.isOpen ? 'scale(1)' : 'scale(1.5)')};\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n\n  padding: 30px;\n  max-width: 480px;\n  width: 100%;\n\n  background-color: var(--white-color);\n\n  border: 4px solid var(--accent-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: var(--black-color);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(AiOutlineClose)`\n  width: 30px;\n  height: 30px;\n`;\n","import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop\n      onClick={e => {\n        props.handleBackdropClick && props.handleBackdropClick(e);\n      }}\n      isOpen={props.isOpen}\n    >\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 8px;\n\n  background-color: var(--secondary-bg-color);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ImageThumb = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  aspect-ratio: 16/12;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: 50%;\n  }\n`;\n\nexport const Image = styled.img``;\n\nexport const UnderTitle = styled.p`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  padding: 15px 0;\n  text-align: center;\n  width: 100%;\n  background-color: var(--shadow-bg-color);\n`;\n\nexport const DeleteButton = styled.button`\n  min-height: 40px;\n  background-color: red;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  List,\n  Item,\n  ImageThumb,\n  Image,\n  UnderTitle,\n  DeleteButton,\n} from './GalleryList.styled';\n\nimport { deletePhotosGroup } from 'redux/gallery/galleryOperations';\nimport { selectGallery } from 'redux/gallery/gallerySelectors';\n\nexport const GalleryList = () => {\n  const gallery = useSelector(selectGallery);\n  const dispatch = useDispatch();\n\n  const handleDeletePhotos = id => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити зображення?'\n    );\n    if (confirmDelete) {\n      dispatch(deletePhotosGroup(id));\n    }\n  };\n\n  return (\n    <List>\n      {gallery.map(item => (\n        <Item key={item._id}>\n          <ImageThumb>\n            <Image\n              src={item.beforePhoto.url}\n              alt={item.beforePhoto.alt || 'Зображення'}\n            />\n            <UnderTitle>До</UnderTitle>\n          </ImageThumb>\n          <ImageThumb>\n            <Image\n              src={item.afterPhoto.url}\n              alt={item.afterPhoto.alt || 'Зображення'}\n            />\n            <UnderTitle>Після</UnderTitle>\n          </ImageThumb>\n          <DeleteButton\n            title=\"Видалити\"\n            onClick={() => handleDeletePhotos(item._id)}\n          >\n            Видалити\n          </DeleteButton>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Label, Input } from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addPhotosGroup } from 'redux/gallery/galleryOperations';\nimport { useState } from 'react';\n\nexport const ModalAddPhotos = props => {\n  const [before, setBefore] = useState(null);\n  const [after, setAfter] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      beforeAlt: '',\n      afterAlt: '',\n    },\n    onSubmit: values => {\n      const formData = new FormData();\n      formData.append('before', before);\n      formData.append('after', after);\n      formData.append('beforeAlt', values.beforeAlt);\n      formData.append('afterAlt', values.afterAlt);\n      dispatch(addPhotosGroup(formData));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout handleExitModal={handleExitModal} isOpen={props.isOpen}>\n      <Title>Додати фото</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          Фото до\n          <Input\n            required\n            type=\"file\"\n            id=\"beforePhoto\"\n            name=\"beforePhoto\"\n            value={formik.values.beforePhoto}\n            onChange={e => setBefore(e.currentTarget.files[0])}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          Назва зображення\n          <Input\n            type=\"text\"\n            id=\"beforeAlt\"\n            name=\"beforeAlt\"\n            value={formik.values.beforeAlt}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          Фото після\n          <Input\n            required\n            type=\"file\"\n            id=\"afterPhoto\"\n            name=\"afterPhoto\"\n            value={formik.values.afterPhoto}\n            onChange={e => setAfter(e.currentTarget.files[0])}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          Назва зображення\n          <Input\n            type=\"text\"\n            id=\"afterAlt\"\n            name=\"afterAlt\"\n            value={formik.values.afterAlt}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { GalleryList } from 'components/AdminPage/GalleryPage/GalleryList/GalleryList';\nimport { ModalAddPhotos } from 'components/Modals/ModalAddPhotos/ModalAddPhotos';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getGallery } from 'redux/gallery/galleryOperations';\nimport { selectIsLoading } from 'redux/gallery/gallerySelectors';\n\nconst Gallery = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getGallery());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <Section paddingBottom={true}>\n      <MainButton\n        type=\"button\"\n        onClick={() => setOpenModal(true)}\n        position={true}\n      >\n        Додати зображення\n      </MainButton>\n      <SectionTitle>Галерея зображень</SectionTitle>\n      <GalleryList />\n      <ModalAddPhotos handleExitModal={handleExitModal} isOpen={isOpenModal} />\n      {isLoading && <Loading />}\n    </Section>\n  );\n};\n\nexport default Gallery;\n","export const selectGallery = state => state.gallery.items;\n\nexport const selectIsLoading = state => state.gallery.isLoading;\n\nexport const selectError = state => state.gallery.error;\n"],"names":["styled","h3","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","Label","label","_templateObject3","LabelText","p","_templateObject4","Input","TextField","_templateObject5","FormSelect","Select","_templateObject6","SelectOption","MenuItem","_templateObject7","FormCheckbox","Checkbox","_templateObject8","MainContainer","div","AdminContainer","Section","section","props","paddingBottom","SectionTitle","h2","MainButton","button","position","margin","color","MainLinkButton","a","Backdrop","isOpen","Modal","Title","Text","CloseButton","CloseIcon","AiOutlineClose","ModalLayout","_jsx","onClick","e","handleBackdropClick","children","_jsxs","handleExitModal","List","ul","Item","li","ImageThumb","Image","img","UnderTitle","DeleteButton","GalleryList","gallery","useSelector","selectGallery","dispatch","useDispatch","map","item","src","beforePhoto","url","alt","afterPhoto","title","handleDeletePhotos","id","_id","window","confirm","deletePhotosGroup","ModalAddPhotos","before","setBefore","useState","after","setAfter","formik","useFormik","initialValues","beforeAlt","afterAlt","onSubmit","values","formData","FormData","append","addPhotosGroup","handleSubmit","required","type","name","value","onChange","currentTarget","files","variant","size","handleChange","Gallery","isOpenModal","setOpenModal","isLoading","selectIsLoading","useEffect","getGallery","Loading","state","items"],"sourceRoot":""}