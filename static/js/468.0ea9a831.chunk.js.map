{"version":3,"file":"static/js/468.0ea9a831.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/Modals/Modal.styles.jsx","components/Modals/ModalLayout.jsx","components/AdminPage/GalleryPage/GalleryList/GalleryList.styled.jsx","components/AdminPage/GalleryPage/GalleryList/GalleryList.jsx","components/Modals/ModalAddPhotos/ModalAddPhotos.jsx","pages/Gallery/Gallery.jsx","redux/gallery/gallerySelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  max-width: 100%;\n  color: var(--label-color);\n  font-size: 12px;\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n\n  // @media screen and (min-width: 768px) {\n  //   padding-top: 80px;\n  //   padding-bottom: ${props => props.paddingBottom && `80px`};\n  // }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: var(--backdrop-color);\n\n  transition: transform var(--transition), opacity var(--transition),\n    visibility var(--transition);\n\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  transform: ${props => (props.isOpen ? 'scale(1)' : 'scale(1.5)')};\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n\n  padding: 30px;\n  max-width: 480px;\n  width: 100%;\n\n  background-color: var(--white-color);\n\n  border: 4px solid var(--accent-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: var(--black-color);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(AiOutlineClose)`\n  width: 30px;\n  height: 30px;\n`;\n","import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)} isOpen={props.isOpen}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 8px;\n\n  background-color: var(--secondary-bg-color);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ImageThumb = styled.div`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  aspect-ratio: 16/12;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: 50%;\n  }\n`;\n\nexport const Image = styled.img``;\n\nexport const UnderTitle = styled.p`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  padding: 15px 0;\n  text-align: center;\n  width: 100%;\n  background-color: var(--shadow-bg-color);\n`;\n\nexport const DeleteButton = styled.button`\n  min-height: 40px;\n  background-color: red;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  List,\n  Item,\n  ImageThumb,\n  Image,\n  UnderTitle,\n  DeleteButton,\n} from './GalleryList.styled';\n\nimport { deletePhotosGroup } from 'redux/gallery/galleryOperations';\nimport { selectGallery } from 'redux/gallery/gallerySelectors';\n\nexport const GalleryList = () => {\n  const gallery = useSelector(selectGallery);\n  const dispatch = useDispatch();\n\n  const handleDeletePhotos = id => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити зображення?'\n    );\n    if (confirmDelete) {\n      dispatch(deletePhotosGroup(id));\n    }\n  };\n\n  return (\n    <List>\n      {gallery.map(item => (\n        <Item key={item._id}>\n          <ImageThumb>\n            <Image\n              src={item.beforePhoto.url}\n              alt={item.beforePhoto.alt || 'Зображення'}\n            />\n            <UnderTitle>До</UnderTitle>\n          </ImageThumb>\n          <ImageThumb>\n            <Image\n              src={item.afterPhoto.url}\n              alt={item.afterPhoto.alt || 'Зображення'}\n            />\n            <UnderTitle>Після</UnderTitle>\n          </ImageThumb>\n          <DeleteButton onClick={() => handleDeletePhotos(item._id)}>\n            Видалити\n          </DeleteButton>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Label, Input } from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addPhotosGroup } from 'redux/gallery/galleryOperations';\nimport { useState } from 'react';\n\nexport const ModalAddPhotos = props => {\n  const [before, setBefore] = useState(null);\n  const [after, setAfter] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      beforeAlt: '',\n      afterAlt: '',\n    },\n    onSubmit: values => {\n      const formData = new FormData();\n      formData.append('before', before);\n      formData.append('after', after);\n      formData.append('beforeAlt', values.beforeAlt);\n      formData.append('afterAlt', values.afterAlt);\n      dispatch(addPhotosGroup(formData));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={props.isOpen}\n    >\n      <Title>Додати фото</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          Фото до\n          <Input\n            required\n            type=\"file\"\n            id=\"beforePhoto\"\n            name=\"beforePhoto\"\n            value={formik.values.beforePhoto}\n            onChange={e => setBefore(e.currentTarget.files[0])}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          Назва зображення\n          <Input\n            type=\"text\"\n            id=\"beforeAlt\"\n            name=\"beforeAlt\"\n            value={formik.values.beforeAlt}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          Фото після\n          <Input\n            required\n            type=\"file\"\n            id=\"afterPhoto\"\n            name=\"afterPhoto\"\n            value={formik.values.afterPhoto}\n            onChange={e => setAfter(e.currentTarget.files[0])}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          Назва зображення\n          <Input\n            type=\"text\"\n            id=\"afterAlt\"\n            name=\"afterAlt\"\n            value={formik.values.afterAlt}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { GalleryList } from 'components/AdminPage/GalleryPage/GalleryList/GalleryList';\nimport { ModalAddPhotos } from 'components/Modals/ModalAddPhotos/ModalAddPhotos';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getGallery } from 'redux/gallery/galleryOperations';\nimport { selectIsLoading } from 'redux/gallery/gallerySelectors';\n\nconst Gallery = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getGallery());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <Section paddingBottom={true}>\n      <MainButton\n        type=\"button\"\n        onClick={() => setOpenModal(true)}\n        position={true}\n      >\n        Додати зображення\n      </MainButton>\n      <SectionTitle>Галерея зображень</SectionTitle>\n      <GalleryList />\n      <ModalAddPhotos handleExitModal={handleExitModal} isOpen={isOpenModal} />\n      {isLoading && <Loading />}\n    </Section>\n  );\n};\n\nexport default Gallery;\n","export const selectGallery = state => state.gallery.items;\n\nexport const selectIsLoading = state => state.gallery.isLoading;\n\nexport const selectError = state => state.gallery.error;\n"],"names":["Form","styled","Label","LabelText","Input","TextField","FormSelect","Select","SelectOption","MenuItem","FormCheckbox","Checkbox","MainContainer","AdminContainer","Section","props","paddingBottom","SectionTitle","MainButton","position","margin","color","MainLinkButton","Backdrop","isOpen","Modal","Title","Text","CloseButton","CloseIcon","AiOutlineClose","ModalLayout","onClick","e","handleBackdropClick","handleExitModal","children","List","Item","ImageThumb","Image","UnderTitle","DeleteButton","GalleryList","gallery","useSelector","selectGallery","dispatch","useDispatch","map","item","src","beforePhoto","url","alt","afterPhoto","id","_id","window","confirm","deletePhotosGroup","ModalAddPhotos","useState","before","setBefore","after","setAfter","formik","useFormik","initialValues","beforeAlt","afterAlt","onSubmit","values","formData","FormData","append","addPhotosGroup","target","currentTarget","handleSubmit","required","type","name","value","onChange","files","variant","size","handleChange","isOpenModal","setOpenModal","isLoading","selectIsLoading","useEffect","getGallery","Loading","state","items"],"sourceRoot":""}