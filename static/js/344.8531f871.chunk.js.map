{"version":3,"file":"static/js/344.8531f871.chunk.js","mappings":"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","sources":["components/Global/Global.styled.jsx","components/AdminPage/GalleryPage/GalleryList/GalleryList.styled.jsx","components/AdminPage/GalleryPage/GalleryList/GalleryList.jsx","components/AdminPage/Modals/ModalAddPhotos/ModalAddPhotos.jsx","pages/Gallery/Gallery.jsx","redux/gallery/gallerySelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n  // max-width: 1200px;\n\n  // margin-left: auto;\n  // margin-right: auto;\n  // padding-left: 15px;\n  // padding-right: 15px;\n\n  // @media screen and (min-width: 480px) {\n  //   max-width: 480px;\n  // }\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 768px;\n  // }\n\n  // @media screen and (min-width: 1200px) {\n  //   max-width: 1200px;\n  // }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 40px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 40px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\ntext - align: center;\n  // margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    // margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--white-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n  /* Інші стилі */\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  padding: 8px;\n  background-color: var(--secondary-bg-color);\n  border-radius: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ImageThumb = styled.div`\n  position: relative;\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n`;\n\nexport const UnderTitle = styled.p`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  padding: 6px 0;\n  text-align: center;\n  width: 100%;\n  background-color: var(--shadow-bg-color);\n`;\n\nexport const DeleteButton = styled.button`\n  min-height: 40px;\n  background-color: red;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n`;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  List,\n  Item,\n  ImageThumb,\n  Image,\n  UnderTitle,\n  DeleteButton,\n} from './GalleryList.styled';\n\nimport { deletePhotosGroup } from 'redux/gallery/galleryOperations';\nimport { selectGallery } from 'redux/gallery/gallerySelectors';\n\nexport const GalleryList = () => {\n  const gallery = useSelector(selectGallery);\n\n  const dispatch = useDispatch();\n\n  return (\n    <List>\n      {gallery.map(item => (\n        <Item key={item._id}>\n          <ImageThumb>\n            <Image\n              src={item.beforePhoto.url}\n              alt={item.beforePhoto.alt || 'Зображення'}\n            />\n            <UnderTitle>До</UnderTitle>\n          </ImageThumb>\n          <ImageThumb>\n            <Image\n              src={item.afterPhoto.url}\n              alt={item.afterPhoto.alt || 'Зображення'}\n            />\n            <UnderTitle>Після</UnderTitle>\n          </ImageThumb>\n          <DeleteButton onClick={() => dispatch(deletePhotosGroup(item._id))}>\n            Видалити\n          </DeleteButton>\n        </Item>\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { Backdrop, Modal, Form, Title, CloseButton } from '../Modal.styles';\nimport { MainButton } from 'components/Global/Global.styled';\nimport { TextField } from '@mui/material';\n\nimport { addPhotosGroup } from 'redux/gallery/galleryOperations';\nimport { useState } from 'react';\n\nexport const ModalAddPhotos = props => {\n  const [before, setBefore] = useState(null);\n  const [after, setAfter] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      beforeAlt: '',\n      afterAlt: '',\n    },\n    onSubmit: values => {\n      const formData = new FormData();\n      formData.append('before', before);\n      formData.append('after', after);\n      formData.append('beforeAlt', values.beforeAlt);\n      formData.append('afterAlt', values.afterAlt);\n      dispatch(addPhotosGroup(formData));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <Backdrop onClick={handleBackdropClick}>\n      <Modal>\n        <CloseButton type=\"button\" onClick={handleExitModal}>\n          Закрити\n        </CloseButton>\n        <Form onSubmit={formik.handleSubmit}>\n          <Title>Додати фото</Title>\n\n          <TextField\n            required\n            type=\"file\"\n            id=\"beforePhoto\"\n            name=\"beforePhoto\"\n            label=\"Фото до\"\n            value={formik.values.beforePhoto}\n            onChange={e => setBefore(e.currentTarget.files[0])}\n            variant=\"standard\"\n            className=\"field\"\n          />\n          <TextField\n            type=\"text\"\n            id=\"beforeAlt\"\n            name=\"beforeAlt\"\n            label=\"Назва зображення\"\n            value={formik.values.beforeAlt}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            className=\"field\"\n          />\n          <TextField\n            required\n            type=\"file\"\n            id=\"afterPhoto\"\n            name=\"afterPhoto\"\n            label=\"Фото після\"\n            value={formik.values.afterPhoto}\n            onChange={e => setAfter(e.currentTarget.files[0])}\n            variant=\"standard\"\n            className=\"field\"\n          />\n          <TextField\n            type=\"text\"\n            id=\"afterAlt\"\n            name=\"afterAlt\"\n            label=\"Назва зображення\"\n            value={formik.values.afterAlt}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            className=\"field\"\n          />\n\n          <MainButton type=\"submit\" color=\"var(--black-color)\">\n            Додати\n          </MainButton>\n        </Form>\n      </Modal>\n    </Backdrop>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  HeaderContainer,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { GalleryList } from 'components/AdminPage/GalleryPage/GalleryList/GalleryList';\nimport { ModalAddPhotos } from 'components/AdminPage/Modals/ModalAddPhotos/ModalAddPhotos';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getGallery } from 'redux/gallery/galleryOperations';\nimport { selectIsLoading } from 'redux/gallery/gallerySelectors';\n\nconst Gallery = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getGallery());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <Section>\n      <HeaderContainer>\n        <SectionTitle>Галерея зображень</SectionTitle>\n        <MainButton type=\"button\" onClick={() => setOpenModal(true)}>\n          Додати зображення\n        </MainButton>\n      </HeaderContainer>\n      <GalleryList />\n      {isOpenModal && <ModalAddPhotos handleExitModal={handleExitModal} />}\n    </Section>\n  );\n};\n\nexport default Gallery;\n","export const selectGallery = state => state.gallery.items;\n\nexport const selectIsLoading = state => state.gallery.isLoading;\n\nexport const selectError = state => state.gallery.error;\n"],"names":["AdminContainer","styled","HeaderContainer","Section","SectionTitle","MainButton","props","margin","color","List","Item","ImageThumb","Image","UnderTitle","DeleteButton","GalleryList","gallery","useSelector","selectGallery","dispatch","useDispatch","map","item","src","beforePhoto","url","alt","afterPhoto","onClick","deletePhotosGroup","_id","ModalAddPhotos","useState","before","setBefore","after","setAfter","handleExitModal","formik","useFormik","initialValues","beforeAlt","afterAlt","onSubmit","values","formData","FormData","append","addPhotosGroup","e","target","currentTarget","type","handleSubmit","TextField","required","id","name","label","value","onChange","files","variant","className","handleChange","isOpenModal","setOpenModal","isLoading","selectIsLoading","useEffect","getGallery","Loading","state","items"],"sourceRoot":""}