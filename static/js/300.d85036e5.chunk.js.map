{"version":3,"file":"static/js/300.d85036e5.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/Modals/Modal.styles.jsx","components/Modals/ModalLayout.jsx","components/AdminPage/EmployeesPage/EmployeesList/EmployeesList.styled.jsx","utils/calculateAgeToNow.js","components/AdminPage/EmployeesPage/EmployeesItem/EmployeesItem.styled.jsx","components/AdminPage/EmployeesPage/ImagesList/ImagesList.styled.jsx","components/Modals/ModalAddEmployeeImage/ModalAddEmployeeImage.jsx","components/AdminPage/EmployeesPage/ImagesItem/ImagesItem.styled.jsx","components/Modals/ModalOpenImage/ModalOpenImage.styled.jsx","components/Modals/ModalOpenImage/ModalOpenImage.jsx","components/AdminPage/EmployeesPage/ImagesItem/ImagesItem.jsx","components/AdminPage/EmployeesPage/ImagesList/ImagesList.jsx","components/AdminPage/EmployeesPage/EmployeesItem/EmployeesItem.jsx","components/AdminPage/EmployeesPage/EmployeesList/EmployeesList.jsx","components/Modals/ModalAddEmployee/ModalAddEmployee.jsx","pages/Employees/Employees.jsx","redux/employees/employeesSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  max-width: 100%;\n  color: var(--label-color);\n  font-size: 12px;\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n\n  // @media screen and (min-width: 768px) {\n  //   padding-top: 80px;\n  //   padding-bottom: ${props => props.paddingBottom && `80px`};\n  // }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: var(--backdrop-color);\n\n  transition: transform var(--transition), opacity var(--transition),\n    visibility var(--transition);\n\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  transform: ${props => (props.isOpen ? 'scale(1)' : 'scale(1.5)')};\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n\n  padding: 30px;\n  max-width: 480px;\n  width: 100%;\n\n  background-color: var(--white-color);\n\n  border: 4px solid var(--accent-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: var(--black-color);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(AiOutlineClose)`\n  width: 30px;\n  height: 30px;\n`;\n","import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)} isOpen={props.isOpen}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  flex-basis: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 30px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 60px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Edit = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n","export function calculateAgeToNow(date) {\n  const startDate = new Date(date);\n  const endDate = new Date();\n  let years = endDate.getFullYear() - startDate.getFullYear();\n  let months = endDate.getMonth() - startDate.getMonth();\n\n  if (months < 0) {\n    years--;\n    months += 12;\n  }\n\n  return `${years} р. ${months} міс.`;\n}\n","import styled from '@emotion/styled';\nimport { FiEdit, FiSave, FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px 40px 12px 12px;\n  width: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 15px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const EditIcon = styled(FiEdit)`\n  width: 20px;\n  height: 20px;\n  color: yellow;\n`;\n\nexport const SaveIcon = styled(FiSave)`\n  width: 20px;\n  height: 20px;\n  color: green;\n`;\n\nexport const DeleteIcon = styled(FiTrash2)`\n  width: 20px;\n  height: 20px;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Select = styled.select`\n  padding-left: 8px;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  padding-left: 8px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n`;\n\nexport const AddBtn = styled.button`\n  width: 60px;\n  height: 60px;\n  font-size: 40px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Input } from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addImageToEmployee } from 'redux/employees/employeesOperations';\n\nexport const ModalAddEmployeeImage = ({ id, isOpen, handleExitModal }) => {\n  const [image, setImage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal();\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('employee', image);\n    dispatch(addImageToEmployee({ id, data: formData }));\n    handleExitModal();\n  };\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={isOpen}\n    >\n      <Title>Додати зображення</Title>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          required\n          type=\"file\"\n          id=\"employee\"\n          name=\"employee\"\n          onChange={e => setImage(e.currentTarget.files[0])}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n`;\n\nexport const Image = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 8px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DelBtn = styled.button`\n  position: absolute;\n  top: 0;\n  right: -16px;\n  padding: 0;\n\n  background-color: transparent;\n\n  border: none;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DelIcon = styled(FiTrash2)`\n  color: red;\n`;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  max-height: 85vh;\n  object-fit: contain;\n`;\n","import { ModalLayout } from '../ModalLayout';\nimport { Image } from './ModalOpenImage.styled';\n\nexport const ModalOpenImage = props => {\n  const handleExitModal = () => props.handleExitModal();\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal();\n    }\n  };\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={props.isOpen}\n    >\n      <Image src={props.image} alt=\"Документ\" />\n    </ModalLayout>\n  );\n};\n","import { useState } from 'react';\nimport { Item, Image, DelBtn, DelIcon } from './ImagesItem.styled';\nimport { ModalOpenImage } from 'components/Modals/ModalOpenImage/ModalOpenImage';\n\nimport { deleteImageFromEmployee } from 'redux/employees/employeesOperations';\nimport { useDispatch } from 'react-redux';\n\nexport const ImagesItem = ({ employeeId, image }) => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => setOpenModal(false);\n\n  const handleDeleteImage = imageId => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити це зображення?'\n    );\n    if (confirmDelete) {\n      dispatch(\n        deleteImageFromEmployee({\n          id: employeeId,\n          data: { imageId },\n        })\n      );\n    }\n  };\n\n  return (\n    <Item>\n      <Image\n        src={image.url}\n        alt=\"Документ\"\n        onClick={() => setOpenModal(true)}\n      />\n      <DelBtn type=\"button\" onClick={() => handleDeleteImage(image.id)}>\n        <DelIcon />\n      </DelBtn>\n      <ModalOpenImage\n        isOpen={isOpenModal}\n        handleExitModal={handleExitModal}\n        image={image.url}\n      />\n    </Item>\n  );\n};\n","import { useState } from 'react';\nimport { List, Item, AddBtn } from './ImagesList.styled';\nimport { ModalAddEmployeeImage } from 'components/Modals/ModalAddEmployeeImage/ModalAddEmployeeImage';\nimport { ImagesItem } from '../ImagesItem/ImagesItem';\n\nexport const ImagesList = ({ employee }) => {\n  const [isOpenModal, setOpenModal] = useState(false);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <>\n      <List>\n        {employee.images.map(image => (\n          <ImagesItem key={image.id} employeeId={employee._id} image={image} />\n        ))}\n        <Item>\n          <AddBtn type=\"button\" onClick={() => setOpenModal(true)}>\n            +\n          </AddBtn>\n        </Item>\n      </List>\n      <ModalAddEmployeeImage\n        id={employee._id}\n        handleExitModal={handleExitModal}\n        isOpen={isOpenModal}\n      />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  updateEmployeeById,\n  deleteEmployeeById,\n} from 'redux/employees/employeesOperations';\n\nimport { calculateAgeToNow } from 'utils/calculateAgeToNow';\n\nimport {\n  Item,\n  Button,\n  Form,\n  EditIcon,\n  SaveIcon,\n  DeleteIcon,\n  Label,\n  Input,\n  Text,\n  Select,\n} from './EmployeesItem.styled';\nimport { ImagesList } from '../ImagesList/ImagesList';\n\nexport const EmployeesItem = ({ employee }) => {\n  const [isEdit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDeleteEmployee = id => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити працівника?'\n    );\n    if (confirmDelete) {\n      dispatch(deleteEmployeeById(id));\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      phone: employee.phone || '',\n      criminal: employee.criminal || false,\n      worksFromDate: employee.worksFromDate || '',\n    },\n    onSubmit: values => {\n      dispatch(updateEmployeeById({ _id: employee._id, data: values }));\n      setEdit(false);\n    },\n  });\n\n  return (\n    <Item>\n      <Form onSubmit={formik.handleSubmit}>\n        <Text>{`Ім'я: ${employee.name}`}</Text>\n        <Label>\n          Телефон:\n          <Input\n            required\n            type=\"text\"\n            id=\"phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          Судимість:\n          <Select\n            required\n            id=\"criminal\"\n            name=\"criminal\"\n            value={formik.values.criminal}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          >\n            <option value={false}>Ні</option>\n            <option value={true}>Так</option>\n          </Select>\n        </Label>\n        {!isEdit && (\n          <Text>{`Працює: ${calculateAgeToNow(employee.worksFromDate)}`}</Text>\n        )}\n        {isEdit && (\n          <Label>\n            Працює:\n            <Input\n              required\n              type=\"date\"\n              id=\"worksFromDate\"\n              name=\"worksFromDate\"\n              value={formik.values.worksFromDate}\n              onChange={formik.handleChange}\n              disabled={!isEdit}\n            />\n          </Label>\n        )}\n\n        {isEdit && (\n          <Button type=\"submit\" top=\"40px\" right=\"8px\">\n            <SaveIcon />\n          </Button>\n        )}\n      </Form>\n      <Button\n        type=\"button\"\n        onClick={() => setEdit(!isEdit)}\n        top=\"8px\"\n        right=\"8px\"\n      >\n        <EditIcon />\n      </Button>\n      {!isEdit && (\n        <Button\n          type=\"button\"\n          onClick={() => handleDeleteEmployee(employee._id)}\n          top=\"40px\"\n          right=\"8px\"\n        >\n          <DeleteIcon />\n        </Button>\n      )}\n      <ImagesList employee={employee} />\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectEmployees } from 'redux/employees/employeesSelectors';\n\nimport { List } from './EmployeesList.styled';\nimport { EmployeesItem } from '../EmployeesItem/EmployeesItem';\n\nexport const EmployeesList = () => {\n  const employees = useSelector(selectEmployees);\n  return (\n    <List>\n      {employees.map(employee => (\n        <EmployeesItem key={employee._id} employee={employee} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport {\n  Form,\n  Label,\n  Input,\n  FormCheckbox,\n} from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addEmployee } from 'redux/employees/employeesOperations';\n\nexport const ModalAddEmployee = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n      criminal: false,\n      worksFromDate: '',\n    },\n    onSubmit: values => {\n      dispatch(addEmployee(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={props.isOpen}\n    >\n      <Title>Додати працівника</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Ім'я працівника\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Input\n          required\n          type=\"tel\"\n          id=\"phone\"\n          name=\"phone\"\n          label=\"Номер телефона\"\n          value={formik.values.phone}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Label>\n          Працює з:\n          <Input\n            required\n            type=\"date\"\n            id=\"worksFromDate\"\n            name=\"worksFromDate\"\n            value={formik.values.worksFromDate}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          <FormCheckbox\n            checked={formik.values.criminal}\n            onChange={() =>\n              formik.setFieldValue('criminal', !formik.values.criminal)\n            }\n          />\n          Судимість\n        </Label>\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { EmployeesList } from 'components/AdminPage/EmployeesPage/EmployeesList/EmployeesList';\nimport { ModalAddEmployee } from 'components/Modals/ModalAddEmployee/ModalAddEmployee';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getAllEmployees } from 'redux/employees/employeesOperations';\nimport {\n  selectIsLoadingEmployees,\n  selectIsUpdating,\n} from 'redux/employees/employeesSelectors';\n\nconst EmployeesPage = () => {\n  const isLoading = useSelector(selectIsLoadingEmployees);\n  const isUpdating = useSelector(selectIsUpdating);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllEmployees());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <Section paddingBottom={true}>\n      <MainButton\n        type=\"button\"\n        onClick={() => setOpenModal(true)}\n        color=\"var(--white-color)\"\n        position={true}\n      >\n        Додати працівника\n      </MainButton>\n      <SectionTitle>Працівники</SectionTitle>\n\n      <EmployeesList />\n\n      <ModalAddEmployee\n        handleExitModal={handleExitModal}\n        isOpen={isOpenModal}\n      />\n      {isUpdating && <Loading />}\n    </Section>\n  );\n};\n\nexport default EmployeesPage;\n","export const selectEmployees = state => state.employees.items;\n\nexport const selectIsLoadingEmployees = state => state.employees.isLoading;\n\nexport const selectIsUpdating = state => state.employees.isUpdating;\n"],"names":["Form","styled","Label","LabelText","Input","TextField","FormSelect","Select","SelectOption","MenuItem","FormCheckbox","Checkbox","MainContainer","AdminContainer","Section","props","paddingBottom","SectionTitle","MainButton","position","margin","color","MainLinkButton","Backdrop","isOpen","Modal","Title","Text","CloseButton","CloseIcon","AiOutlineClose","ModalLayout","onClick","e","handleBackdropClick","handleExitModal","children","List","calculateAgeToNow","date","startDate","Date","endDate","years","getFullYear","months","getMonth","Item","Button","top","right","EditIcon","FiEdit","SaveIcon","FiSave","DeleteIcon","FiTrash2","AddBtn","ModalAddEmployeeImage","id","useState","image","setImage","dispatch","useDispatch","target","currentTarget","onSubmit","preventDefault","formData","FormData","append","addImageToEmployee","data","required","type","name","onChange","files","variant","size","Image","DelBtn","DelIcon","ModalOpenImage","src","alt","ImagesItem","employeeId","isOpenModal","setOpenModal","url","imageId","window","confirm","deleteImageFromEmployee","ImagesList","employee","images","map","_id","EmployeesItem","isEdit","setEdit","formik","useFormik","initialValues","phone","criminal","worksFromDate","values","updateEmployeeById","handleSubmit","value","handleChange","disabled","deleteEmployeeById","EmployeesList","employees","useSelector","selectEmployees","ModalAddEmployee","addEmployee","label","checked","setFieldValue","isLoading","selectIsLoadingEmployees","isUpdating","selectIsUpdating","useEffect","getAllEmployees","Loading","state","items"],"sourceRoot":""}