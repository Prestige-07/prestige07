{"version":3,"file":"static/js/918.82f5f08c.chunk.js","mappings":"iRAyBaA,GAvBYC,EAAAA,EAAAA,IAAH,+bAuBQA,EAAAA,EAAAA,IAAH,kIAQdC,EAAkBD,EAAAA,EAAAA,IAAH,+JASfE,EAAUF,EAAAA,EAAAA,QAAH,2KAUPG,EAAeH,EAAAA,EAAAA,GAAH,kPAeZI,EAAaJ,EAAAA,EAAAA,OAAH,gdACX,SAAAK,GAAK,OAAIA,EAAMC,QAAN,QAAJ,IAGN,SAAAD,GAAK,OAAKA,EAAME,MAAQF,EAAME,MAAQ,oBAAjC,G,+ICpEHC,GAAWR,EAAAA,EAAAA,GAAOS,EAAAA,GAAPT,CAAH,mJ,mBCARU,EAAU,WACrB,OACE,iBAAKC,UAAU,UAAf,WACE,iBAAKA,UAAU,OAAf,WACE,SAAC,MAAD,CAAQA,UAAU,gBAClB,cAAGA,UAAU,aAAb,SAA0B,cAE5B,iBAAKA,UAAU,eAAf,WACE,SAACH,EAAD,CAAUI,GAAG,SAASD,UAAU,gBAAhC,SAAgD,kEAGhD,SAACH,EAAD,CAAUI,GAAG,UAAUD,UAAU,gBAAjC,SAAiD,uGAGjD,SAACH,EAAD,CAAUI,GAAG,YAAYD,UAAU,gBAAnC,SAAmD,kEAGnD,SAACH,EAAD,CAAUI,GAAG,WAAWD,UAAU,gBAAlC,SAAkD,gDAGlD,SAACH,EAAD,CAAUI,GAAG,UAAUD,UAAU,gBAAjC,SAAiD,gEAMxD,E,wCCyBD,EA3Cc,WACZ,OAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzBC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAwBjB,OAtBAC,EAAAA,EAAAA,YAAU,WACgBC,aAAaC,QAAQ,gBAE3CJ,GAASK,EAAAA,EAAAA,OACNC,MAAK,WACJZ,GAAa,EACd,IACAa,OAAM,SAAAC,GACLC,QAAQD,MAAM,0BAA2BA,GACzCd,GAAa,EACd,IAEHA,GAAa,EAEhB,GAAE,CAACM,KAEJE,EAAAA,EAAAA,YAAU,WACHT,GAAcE,GACjBG,EAAS,SAEZ,GAAE,CAACL,EAAWE,EAAYG,IAEvBL,GACK,SAACiB,EAAA,EAAD,KAIP,iBAAKC,MAAO,CAAEC,QAAS,QAAvB,WACE,SAACvB,EAAD,KACA,SAAC,KAAD,WACE,SAAC,KAAD,QAIP,C,gFCpDM,IAOMQ,EAAmB,SAAAgB,GAAK,OAAIA,EAAMC,KAAKnB,UAAf,EAQxBoB,EAAuB,SAAAF,GAAK,OAAIA,EAAMC,KAAKE,cAAf,C","sources":["components/Global/Global.styled.jsx","components/AdminPage/Sidebar/Sidebar.styled.jsx","components/AdminPage/Sidebar/Sidebar.jsx","pages/Admin/Admin.jsx","redux/auth/authSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n  // max-width: 1200px;\n\n  // margin-left: auto;\n  // margin-right: auto;\n  // padding-left: 15px;\n  // padding-right: 15px;\n\n  // @media screen and (min-width: 480px) {\n  //   max-width: 480px;\n  // }\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 768px;\n  // }\n\n  // @media screen and (min-width: 1200px) {\n  //   max-width: 1200px;\n  // }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 40px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 40px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\ntext - align: center;\n  // margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    // margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--white-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const PageLink = styled(NavLink)`\n  color: #ffffff;\n  &.active {\n    color: var(--accent-color);\n    background-color: var(--admin-items-bg-color);\n  }\n`;\n","import { PageLink } from './Sidebar.styled';\nimport { FiUser } from 'react-icons/fi';\n\nexport const Sidebar = () => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"user\">\n        <FiUser className=\"user__icon\" />\n        <p className=\"user__name\">Admin</p>\n      </div>\n      <nav className=\"sidebar__nav\">\n        <PageLink to=\"orders\" className=\"sidebar__item\">\n          Замовлення\n        </PageLink>\n        <PageLink to=\"gallery\" className=\"sidebar__item\">\n          Галерея зображень\n        </PageLink>\n        <PageLink to=\"employees\" className=\"sidebar__item\">\n          Працівники\n        </PageLink>\n        <PageLink to=\"services\" className=\"sidebar__item\">\n          Послуги\n        </PageLink>\n        <PageLink to=\"reports\" className=\"sidebar__item\">\n          Звітність\n        </PageLink>\n      </nav>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { Sidebar } from 'components/AdminPage/Sidebar/Sidebar';\nimport { AdminContainer } from 'components/Global/Global.styled';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\nimport { refresh } from 'redux/auth/authOperations';\n\nconst Admin = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const LocalStoreToken = localStorage.getItem('persist:auth');\n    if (LocalStoreToken) {\n      dispatch(refresh())\n        .then(() => {\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.error('Error refreshing token:', error);\n          setIsLoading(false);\n        });\n    } else {\n      setIsLoading(false);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!isLoading && !isLoggedIn) {\n      navigate('/login');\n    }\n  }, [isLoading, isLoggedIn, navigate]);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar />\n      <AdminContainer>\n        <Outlet />\n      </AdminContainer>\n    </div>\n  );\n};\n\nexport default Admin;\n","export const selectAuth = state => {\n  const { isLoggedIn, token } = state.auth;\n  return { isLoggedIn, token };\n};\n\nexport const selectIsAuthLoading = state => state.auth.isLoading;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectError = state => state.auth.error;\n\nexport const selectToken = state => state.auth.token;\n\nexport const selectAdministrators = state => state.auth.administrators;\n\n// export const selectUserAvatar = state => state.auth.user.avatarURL;\n\n// export const selectIsRefreshing = state => state.auth.isRefreshing;\n\n// export const selectIsLoading = state => state.auth.isLoading;\n\n// export const selectUserId = state => state.auth.user.id;\n"],"names":["AdminContainer","styled","HeaderContainer","Section","SectionTitle","MainButton","props","margin","color","PageLink","NavLink","Sidebar","className","to","useState","isLoading","setIsLoading","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","dispatch","useDispatch","useEffect","localStorage","getItem","refresh","then","catch","error","console","Loading","style","display","state","auth","selectAdministrators","administrators"],"sourceRoot":""}