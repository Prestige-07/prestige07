{"version":3,"file":"static/js/785.fb7c0d51.chunk.js","mappings":"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","sources":["components/AdminPage/Modals/ModalLayout.jsx","components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/AdminPage/Modals/ModalAddEmployee/ModalAddEmployee.jsx","pages/Employees/Employees.jsx","redux/employees/employeesSelectors.js"],"sourcesContent":["import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  color: var(--label-color);\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n  // max-width: 1200px;\n\n  // margin-left: auto;\n  // margin-right: auto;\n  // padding-left: 15px;\n  // padding-right: 15px;\n\n  // @media screen and (min-width: 480px) {\n  //   max-width: 480px;\n  // }\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 768px;\n  // }\n\n  // @media screen and (min-width: 1200px) {\n  //   max-width: 1200px;\n  // }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 40px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 60px;\n  padding-bottom: 60px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\ntext - align: center;\n  // margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    // margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Label, Input, FormCheckbox } from '../../../Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addEmployee } from 'redux/employees/employeesOperations';\n\nexport const ModalAddEmployee = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n      criminal: false,\n      worksFromDate: '',\n    },\n    onSubmit: values => {\n      dispatch(addEmployee(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n    >\n      <Title>Додати працівника</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Ім'я працівника\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n        />\n        <Input\n          required\n          type=\"tel\"\n          id=\"phone\"\n          name=\"phone\"\n          label=\"Номер телефона\"\n          value={formik.values.phone}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n        />\n        <Label>\n          Працює з:\n          <Input\n            required\n            type=\"date\"\n            id=\"worksFromDate\"\n            name=\"worksFromDate\"\n            value={formik.values.worksFromDate}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n          />\n        </Label>\n        <Label>\n          <FormCheckbox\n            checked={formik.values.criminal}\n            onChange={() =>\n              formik.setFieldValue('criminal', !formik.values.criminal)\n            }\n          />\n          Судимість\n        </Label>\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  HeaderContainer,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { ModalAddEmployee } from 'components/AdminPage/Modals/ModalAddEmployee/ModalAddEmployee';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getAllEmployees } from 'redux/employees/employeesOperations';\nimport {\n  selectEmployees,\n  selectIsLoadingEmployees,\n} from 'redux/employees/employeesSelectors';\n\nconst EmployeesPage = () => {\n  const employees = useSelector(selectEmployees);\n  const isLoading = useSelector(selectIsLoadingEmployees);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllEmployees());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  function calculateAge(date) {\n    const startDate = new Date(date);\n    const endDate = new Date();\n    let years = endDate.getFullYear() - startDate.getFullYear();\n    let months = endDate.getMonth() - startDate.getMonth();\n\n    if (months < 0) {\n      years--;\n      months += 12;\n    }\n\n    return `${years} р. ${months} міс.`;\n  }\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <Section>\n      <HeaderContainer>\n        <SectionTitle>Працівники</SectionTitle>\n        <MainButton\n          type=\"button\"\n          onClick={() => setOpenModal(true)}\n          color=\"var(--white-color)\"\n        >\n          Додати працівника\n        </MainButton>\n      </HeaderContainer>\n\n      <ul\n        className=\"list\"\n        style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}\n      >\n        {employees.map(employee => (\n          <li key={employee._id}>\n            <p>{`Ім'я: ${employee.name}`}</p>\n            <p>{`Телефон: ${employee.phone}`}</p>\n            {employee.criminal && <p>Є судимість</p>}\n            <p>{`Працює: ${calculateAge(employee.worksFromDate)}`}</p>\n          </li>\n        ))}\n      </ul>\n      {isOpenModal && <ModalAddEmployee handleExitModal={handleExitModal} />}\n    </Section>\n  );\n};\n\nexport default EmployeesPage;\n","export const selectEmployees = state => state.employees.items;\n\nexport const selectIsLoadingEmployees = state => state.employees.isLoading;\n"],"names":["ModalLayout","props","onClick","e","handleBackdropClick","handleExitModal","children","Form","styled","Label","LabelText","Input","TextField","FormSelect","Select","SelectOption","MenuItem","FormCheckbox","Checkbox","AdminContainer","HeaderContainer","Section","SectionTitle","MainButton","margin","color","ModalAddEmployee","dispatch","useDispatch","formik","useFormik","initialValues","name","phone","criminal","worksFromDate","onSubmit","values","addEmployee","target","currentTarget","handleSubmit","required","type","id","label","value","onChange","handleChange","variant","checked","setFieldValue","employees","useSelector","selectEmployees","isLoading","selectIsLoadingEmployees","useState","isOpenModal","setOpenModal","useEffect","getAllEmployees","calculateAge","date","startDate","Date","endDate","years","getFullYear","months","getMonth","Loading","className","style","display","flexDirection","gap","map","employee","_id","state","items"],"sourceRoot":""}