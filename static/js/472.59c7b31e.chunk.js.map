{"version":3,"file":"static/js/472.59c7b31e.chunk.js","mappings":"oKAEaA,EAAc,SAAAC,GACzB,OACE,SAAC,KAAD,CAAUC,QAAS,SAAAC,GAAC,OAAIF,EAAMG,oBAAoBD,EAA9B,EAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAaD,QAAS,kBAAMD,EAAMI,iBAAZ,EAAtB,UACE,SAAC,KAAD,MAEDJ,EAAMK,aAId,C,uRCHYC,GAPQC,EAAAA,EAAAA,GAAH,4GAOEA,EAAAA,EAAAA,KAAH,4KAUJC,EAAQD,EAAAA,EAAAA,MAAH,sEAKLE,EAAYF,EAAAA,EAAAA,EAAH,+CAITG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,EAAPJ,CAAH,wCAILK,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,EAAPN,CAAH,wCAIVO,GAAeP,EAAAA,EAAAA,GAAOQ,EAAAA,EAAPR,CAAH,sBAEZS,GAAeT,EAAAA,EAAAA,GAAOU,EAAAA,EAAPV,CAAH,qB,6OCrCZW,EAAgBX,EAAAA,EAAAA,IAAH,8UAmBbY,EAAiBZ,EAAAA,EAAAA,IAAH,uMAWda,EAAkBb,EAAAA,EAAAA,IAAH,+JASfc,EAAUd,EAAAA,EAAAA,QAAH,iLAUPe,EAAef,EAAAA,EAAAA,GAAH,4OAeZgB,EAAahB,EAAAA,EAAAA,OAAH,ykBACX,SAAAP,GAAK,OAAIA,EAAMwB,QAAN,QAAJ,IAIN,SAAAxB,GAAK,OAAKA,EAAMyB,MAAQzB,EAAMyB,MAAQ,oBAAjC,IAuBHC,EAAiBnB,EAAAA,EAAAA,EAAH,4pB,yKC5FdoB,EAAOpB,EAAAA,EAAAA,GAAH,iG,GAOGA,EAAAA,EAAAA,GAAH,6YAoBGA,EAAAA,EAAAA,EAAH,sBAEGA,EAAAA,EAAAA,OAAH,2E,mBC5BJqB,EAAOrB,EAAAA,EAAAA,GAAH,uZAsBJD,GAFOC,EAAAA,EAAAA,EAAH,sBAEGA,EAAAA,EAAAA,KAAH,+GAOJsB,EAAStB,EAAAA,EAAAA,OAAH,kPAEV,SAAAP,GAAK,OAAIA,EAAM8B,GAAV,IACH,SAAA9B,GAAK,OAAIA,EAAM+B,KAAV,IAWHC,GAAWzB,EAAAA,EAAAA,GAAO0B,EAAAA,IAAP1B,CAAH,2EAMR2B,GAAW3B,EAAAA,EAAAA,GAAO4B,EAAAA,IAAP5B,CAAH,0EAMR6B,GAAa7B,EAAAA,EAAAA,GAAO8B,EAAAA,IAAP9B,CAAH,wEAMVC,EAAQD,EAAAA,EAAAA,MAAH,sEAKLG,EAAQH,EAAAA,EAAAA,MAAH,yQAYL+B,EAAW/B,EAAAA,EAAAA,SAAH,0R,SC5DRgC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAEXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAMT,EAAQS,MAAQ,GACtBC,MAAOV,EAAQU,OAAS,GACxBC,gBAAiBX,EAAQW,iBAAmB,IAE9CC,SAAU,SAAAC,GACRC,QAAQC,IAAIF,GACZT,GAASY,EAAAA,EAAAA,IAAkB,CAAEC,IAAKjB,EAAQiB,IAAKC,KAAML,KACrDV,GAAQ,EACT,IAGH,OACE,UAAC,EAAD,YACE,UAACrC,EAAD,CAAM8C,SAAUN,EAAOa,aAAvB,WACE,UAACnD,EAAD,WAAO,mCAEL,SAAC8B,EAAD,CACEsB,UAAQ,EACRC,KAAK,OACLC,GAAG,OACHb,KAAK,OACLc,MAAOjB,EAAOO,OAAOJ,KACrBe,SAAUlB,EAAOmB,aACjBC,UAAWxB,QAGf,UAAClC,EAAD,WAAO,qDAEL,SAACE,EAAD,CACEkD,UAAQ,EACRC,KAAK,SACLC,GAAG,QACHb,KAAK,QACLc,MAAOjB,EAAOO,OAAOH,MACrBc,SAAUlB,EAAOmB,aACjBC,UAAWxB,QAGf,UAAClC,EAAD,WAAO,mEAEL,SAACE,EAAD,CACEkD,UAAQ,EACRC,KAAK,SACLC,GAAG,kBACHb,KAAK,kBACLc,MAAOjB,EAAOO,OAAOF,gBACrBa,SAAUlB,EAAOmB,aACjBC,UAAWxB,OAGdA,IACC,SAACb,EAAD,CAAQgC,KAAK,SAAS/B,IAAI,OAAOC,MAAM,MAAvC,UACE,SAACG,EAAD,UAIN,SAACL,EAAD,CACEgC,KAAK,SACL5D,QAAS,kBAAM0C,GAASD,EAAf,EACTZ,IAAI,MACJC,MAAM,MAJR,UAME,SAACC,EAAD,OAEAU,IACA,SAACb,EAAD,CACEgC,KAAK,SACL5D,QAAS,kBAAM2C,GAASuB,EAAAA,EAAAA,IAAkB3B,EAAQiB,KAAzC,EACT3B,IAAI,OACJC,MAAM,MAJR,UAME,SAACK,EAAD,QAKT,ECjGYgC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAC7B,OACE,SAAC5C,EAAD,UACG0C,EAASG,KAAI,SAAAhC,GAAO,OACnB,SAACD,EAAD,CAAgCC,QAASA,GAAtBA,EAAQiB,IADR,KAK1B,E,wCCLYgB,EAAkB,SAAAzE,GAC7B,IAAM4C,GAAWC,EAAAA,EAAAA,MAEXzC,EAAkB,WACtBJ,EAAMI,iBAAgB,EACvB,EAQK0C,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPwB,eAAe,EACfvB,gBAAiB,IAEnBC,SAAU,SAAAC,GACRT,GAAS+B,EAAAA,EAAAA,IAAWtB,IACpBjD,GACD,IAGH,OACE,UAACL,EAAA,EAAD,CACEK,gBAAiBA,EACjBD,oBAtBwB,SAAAD,GACtBA,EAAE0E,SAAW1E,EAAE2E,eACjBzE,GAEH,EAgBC,WAIE,SAAC,KAAD,UAAO,qFACP,UAAC,KAAD,CAAMgD,SAAUN,EAAOa,aAAvB,WACE,SAAC,KAAD,CACEC,UAAQ,EACRC,KAAK,OACLC,GAAG,OACHb,KAAK,OACL6B,MAAM,4EACNf,MAAOjB,EAAOO,OAAOJ,KACrBe,SAAUlB,EAAOmB,aACjBc,QAAQ,WACRC,KAAK,WAEP,SAAC,KAAD,CACEpB,UAAQ,EACRC,KAAK,OACLC,GAAG,QACHb,KAAK,QACL6B,MAAM,sEACNf,MAAOjB,EAAOO,OAAOH,MACrBc,SAAUlB,EAAOmB,aACjBc,QAAQ,WACRC,KAAK,WAEP,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,QAASnC,EAAOO,OAAOqB,cACvBV,SAAU,kBACRlB,EAAOoC,cACL,iBACCpC,EAAOO,OAAOqB,cAHT,IAMV,uDAGJ,SAAC,KAAD,CACEd,UAAQ,EACRC,KAAK,SACLsB,WAAY,CAAEC,IAAK,KACnBtB,GAAG,kBACHb,KAAK,kBACL6B,MAAM,gHACNf,MAAOjB,EAAOO,OAAOF,gBACrBa,SAAUlB,EAAOmB,aACjBc,QAAQ,WACRC,KAAK,WAGP,SAAC,KAAD,CAAYnB,KAAK,SAASpC,MAAM,qBAAqBD,QAAQ,EAA7D,SAAmE,8CAM1E,ECnDD,EA5BqB,WACnB,OAAoCiB,EAAAA,EAAAA,WAAS,GAA7C,eAAO4C,EAAP,KAAoBC,EAApB,KACM1C,GAAWC,EAAAA,EAAAA,OAEjB0C,EAAAA,EAAAA,YAAU,WACR3C,GAAS4C,EAAAA,EAAAA,MACV,GAAE,CAAC5C,IAMJ,OACE,UAAC,KAAD,YACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAc,gDACd,SAAC,KAAD,CAAYiB,KAAK,SAAS5D,QAAS,kBAAMqF,GAAa,EAAnB,EAAnC,SAA6D,wFAK/D,SAAClB,EAAD,IAECiB,IAAe,SAACZ,EAAD,CAAiBrE,gBAfb,WACtBkF,GAAa,EACd,MAgBF,C,uDC3CM,IAAMf,EAAuB,SAAAkB,GAAK,OAAIA,EAAMpB,SAASqB,KAAnB,C","sources":["components/AdminPage/Modals/ModalLayout.jsx","components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/AdminPage/ServicesPage/ServicesList/ServicesList.styled.jsx","components/AdminPage/ServicesPage/ServiceItem/ServiceItem.styled.jsx","components/AdminPage/ServicesPage/ServiceItem/ServiceItem.jsx","components/AdminPage/ServicesPage/ServicesList/ServicesList.jsx","components/AdminPage/Modals/ModalAddService/ModalAddService.jsx","pages/Services/Services.jsx","redux/services/servicesSelectors.js"],"sourcesContent":["import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  color: var(--label-color);\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 15px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 40px;\n  // padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    // padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 11px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 11px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  flex-basis: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 30px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 60px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Edit = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n","import styled from '@emotion/styled';\nimport { FiEdit, FiSave, FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px 40px 12px 12px;\n  width: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 15px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const EditIcon = styled(FiEdit)`\n  width: 20px;\n  height: 20px;\n  color: yellow;\n`;\n\nexport const SaveIcon = styled(FiSave)`\n  width: 20px;\n  height: 20px;\n  color: green;\n`;\n\nexport const DeleteIcon = styled(FiTrash2)`\n  width: 20px;\n  height: 20px;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: flex-start;\n`;\n\nexport const Input = styled.input`\n  margin-left: 8px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  margin-left: 8px;\n  resize: none;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  updateServiceById,\n  deleteServiceById,\n} from 'redux/services/servicesOperations';\n\nimport {\n  Item,\n  Button,\n  Form,\n  EditIcon,\n  SaveIcon,\n  DeleteIcon,\n  Label,\n  TextArea,\n  Input,\n} from './ServiceItem.styled';\n\nexport const ServicesItem = ({ service }) => {\n  const [isEdit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      name: service.name || '',\n      price: service.price || '',\n      employeePercent: service.employeePercent || '',\n    },\n    onSubmit: values => {\n      console.log(values);\n      dispatch(updateServiceById({ _id: service._id, data: values }));\n      setEdit(false);\n    },\n  });\n\n  return (\n    <Item>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          Назва:\n          <TextArea\n            required\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          Вартість:\n          <Input\n            required\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            value={formik.values.price}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          %,працівнику:\n          <Input\n            required\n            type=\"number\"\n            id=\"employeePercent\"\n            name=\"employeePercent\"\n            value={formik.values.employeePercent}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        {isEdit && (\n          <Button type=\"submit\" top=\"40px\" right=\"8px\">\n            <SaveIcon />\n          </Button>\n        )}\n      </Form>\n      <Button\n        type=\"button\"\n        onClick={() => setEdit(!isEdit)}\n        top=\"8px\"\n        right=\"8px\"\n      >\n        <EditIcon />\n      </Button>\n      {!isEdit && (\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteServiceById(service._id))}\n          top=\"40px\"\n          right=\"8px\"\n        >\n          <DeleteIcon />\n        </Button>\n      )}\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectGetAllServices } from 'redux/services/servicesSelectors';\n\nimport { List } from './ServicesList.styled';\nimport { ServicesItem } from '../ServiceItem/ServiceItem';\n\nexport const ServicesList = () => {\n  const services = useSelector(selectGetAllServices);\n  return (\n    <List>\n      {services.map(service => (\n        <ServicesItem key={service._id} service={service} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Label, Input, FormCheckbox } from '../../../Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addService } from 'redux/services/servicesOperations';\n\nexport const ModalAddService = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      price: '',\n      pricePerMeter: false,\n      employeePercent: '',\n    },\n    onSubmit: values => {\n      dispatch(addService(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n    >\n      <Title>Додати послугу</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Назва послуги\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Input\n          required\n          type=\"text\"\n          id=\"price\"\n          name=\"price\"\n          label=\"Ціна послуги\"\n          value={formik.values.price}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Label>\n          <FormCheckbox\n            checked={formik.values.pricePerMeter}\n            onChange={() =>\n              formik.setFieldValue(\n                'pricePerMeter',\n                !formik.values.pricePerMeter\n              )\n            }\n          />\n          Ціна за м²\n        </Label>\n        <Input\n          required\n          type=\"number\"\n          inputProps={{ min: '0' }}\n          id=\"employeePercent\"\n          name=\"employeePercent\"\n          label=\"Відсоток працівнику\"\n          value={formik.values.employeePercent}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport {\n  useDispatch,\n  // useSelector\n} from 'react-redux';\n\nimport { getAllServices } from 'redux/services/servicesOperations';\n\nimport { ServicesList } from 'components/AdminPage/ServicesPage/ServicesList/ServicesList';\nimport {\n  Section,\n  HeaderContainer,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { ModalAddService } from 'components/AdminPage/Modals/ModalAddService/ModalAddService';\n\nconst ServicesPage = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllServices());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <Section>\n      <HeaderContainer>\n        <SectionTitle>Послуги</SectionTitle>\n        <MainButton type=\"button\" onClick={() => setOpenModal(true)}>\n          Додати послугу\n        </MainButton>\n      </HeaderContainer>\n\n      <ServicesList />\n\n      {isOpenModal && <ModalAddService handleExitModal={handleExitModal} />}\n    </Section>\n  );\n};\n\nexport default ServicesPage;\n","export const selectGetAllServices = state => state.services.items;\n\nexport const selectIsLoadingServices = state => state.services.isLoading;\n"],"names":["ModalLayout","props","onClick","e","handleBackdropClick","handleExitModal","children","Form","styled","Label","LabelText","Input","TextField","FormSelect","Select","SelectOption","MenuItem","FormCheckbox","Checkbox","MainContainer","AdminContainer","HeaderContainer","Section","SectionTitle","MainButton","margin","color","MainLinkButton","List","Item","Button","top","right","EditIcon","FiEdit","SaveIcon","FiSave","DeleteIcon","FiTrash2","TextArea","ServicesItem","service","useState","isEdit","setEdit","dispatch","useDispatch","formik","useFormik","initialValues","name","price","employeePercent","onSubmit","values","console","log","updateServiceById","_id","data","handleSubmit","required","type","id","value","onChange","handleChange","disabled","deleteServiceById","ServicesList","services","useSelector","selectGetAllServices","map","ModalAddService","pricePerMeter","addService","target","currentTarget","label","variant","size","checked","setFieldValue","inputProps","min","isOpenModal","setOpenModal","useEffect","getAllServices","state","items"],"sourceRoot":""}