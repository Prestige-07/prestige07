{"version":3,"file":"static/js/172.25769e23.chunk.js","mappings":"2MAEO,MAAMA,EAAgBC,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+QAiB1BC,EAAiBJ,EAAAA,EAAOC,IAAGI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2LAW3BG,EAAUN,EAAAA,EAAOO,QAAOC,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,wGAEjBM,GAASA,EAAMC,eAAa,SAInCC,EAAeX,EAAAA,EAAOY,GAAEC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,8NAexBW,EAAad,EAAAA,EAAOe,OAAMC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,gjBACnCM,GACAA,EAAMQ,UAAQ,8DAMNR,GAASA,EAAMS,QAAM,WAItBT,GAAUA,EAAMU,MAAQV,EAAMU,MAAQ,uBAuBpCC,EAAiBpB,EAAAA,EAAOqB,EAACC,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,ynB,kICnF/B,MAAMoB,EAAevB,EAAAA,EAAOO,QAAOL,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kGAO7BqB,EAAOxB,EAAAA,EAAOyB,KAAIpB,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2NAalBuB,EAAQ1B,EAAAA,EAAO2B,MAAKnB,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,iDAKpByB,GAAQ5B,EAAAA,EAAAA,GAAO6B,EAAAA,EAAP7B,CAAiBa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,0BAIzB2B,EAAY9B,EAAAA,EAAOe,OAAMC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,iJ,qDCpBtC,MAmEA,EAnEkB4B,KAChB,MAAOC,EAAcC,IAAiBC,EAAAA,EAAAA,WAAS,GACzCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,KAE/BC,EAAAA,EAAAA,YAAU,KACgBC,aAAaC,QAAQ,iBAE3CT,GAASU,EAAAA,EAAAA,MACX,GACC,CAACV,KAEJO,EAAAA,EAAAA,YAAU,KACJH,GACFF,EAAS,SACX,GACC,CAACE,EAAYF,IAEhB,MAAMS,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAUC,IACRjB,GAASkB,EAAAA,EAAAA,IAAMD,GAAQ,IAI3B,OACEE,EAAAA,EAAAA,KAAC/B,EAAY,CAAAgC,UACXC,EAAAA,EAAAA,MAAChC,EAAI,CAAC2B,SAAUL,EAAOW,aAAaF,SAAA,EAClCD,EAAAA,EAAAA,KAAC5B,EAAK,CAAA6B,UACJD,EAAAA,EAAAA,KAAC1B,EAAK,CACJ8B,UAAQ,EACRC,KAAK,OACLC,GAAG,QACHC,KAAK,QACLlC,MAAM,8FACNmC,MAAOhB,EAAOM,OAAOH,MACrBc,SAAUjB,EAAOkB,aACjBC,QAAQ,gBAGZT,EAAAA,EAAAA,MAAC9B,EAAK,CAAA6B,SAAA,EACJD,EAAAA,EAAAA,KAAC1B,EAAK,CACJ8B,UAAQ,EACRC,KAAM3B,EAAe,WAAa,OAClC4B,GAAG,WACHC,KAAK,WACLlC,MAAM,uCACNmC,MAAOhB,EAAOM,OAAOF,SACrBa,SAAUjB,EAAOkB,aACjBC,QAAQ,cAEVX,EAAAA,EAAAA,KAACxB,EAAS,CAAC6B,KAAK,SAASO,QAASA,IAAMjC,GAAeD,GAAcuB,SAClEvB,GAAesB,EAAAA,EAAAA,KAACa,EAAAA,IAAK,KAAMb,EAAAA,EAAAA,KAACc,EAAAA,IAAQ,UAGzCd,EAAAA,EAAAA,KAACxC,EAAAA,GAAU,CAAC6C,KAAK,SAASxC,MAAM,qBAAoBoC,SAAC,6CAI1C,C","sources":["components/Global/Global.styled.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: var(--button-border);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: var(--button-shadow);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border: var(--button-border);\n  border-radius: 25px;\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const LoginWrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  gap: 30px;\n  padding: 50px;\n  width: 400px;\n  color: black;\n  background-color: white;\n  border-radius: 12px;\n`;\n\nexport const Label = styled.label`\n  position: relative;\n  width: 100%;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const HiddenBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 0;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { LoginWrapper, Label, Form, Input, HiddenBtn } from './Login.styled';\nimport { FiEye, FiEyeOff } from 'react-icons/fi';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { getCurrentUser, login } from 'redux/auth/authOperations';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst LoginPage = () => {\n  const [isHiddenPass, setHiddenPass] = useState(true);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    const LocalStoreToken = localStorage.getItem('persist:auth');\n    if (LocalStoreToken) {\n      dispatch(getCurrentUser());\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/admin');\n    }\n  }, [isLoggedIn, navigate]);\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      dispatch(login(values));\n    },\n  });\n\n  return (\n    <LoginWrapper>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          <Input\n            required\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Електронна пошта\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n          />\n        </Label>\n        <Label>\n          <Input\n            required\n            type={isHiddenPass ? 'password' : 'text'}\n            id=\"password\"\n            name=\"password\"\n            label=\"Пароль\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n          />\n          <HiddenBtn type=\"button\" onClick={() => setHiddenPass(!isHiddenPass)}>\n            {isHiddenPass ? <FiEye /> : <FiEyeOff />}\n          </HiddenBtn>\n        </Label>\n        <MainButton type=\"submit\" color=\"var(--black-color)\">\n          Увійти\n        </MainButton>\n      </Form>\n    </LoginWrapper>\n  );\n};\n\nexport default LoginPage;\n"],"names":["MainContainer","styled","div","_templateObject","_taggedTemplateLiteral","AdminContainer","_templateObject2","Section","section","_templateObject3","props","paddingBottom","SectionTitle","h2","_templateObject4","MainButton","button","_templateObject5","position","margin","color","MainLinkButton","a","_templateObject6","LoginWrapper","Form","form","Label","label","Input","TextField","HiddenBtn","LoginPage","isHiddenPass","setHiddenPass","useState","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","selectIsLoggedIn","useEffect","localStorage","getItem","getCurrentUser","formik","useFormik","initialValues","email","password","onSubmit","values","login","_jsx","children","_jsxs","handleSubmit","required","type","id","name","value","onChange","handleChange","variant","onClick","FiEye","FiEyeOff"],"sourceRoot":""}