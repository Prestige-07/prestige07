{"version":3,"file":"static/js/172.6158484e.chunk.js","mappings":"mUAEaA,EAAgBC,EAAAA,EAAAA,IAAH,6RAiBbC,EAAiBD,EAAAA,EAAAA,IAAH,mLAUdE,EAAkBF,EAAAA,EAAAA,IAAH,+JASfG,EAAUH,EAAAA,EAAAA,QAAH,yKAEA,SAAAI,GAAK,OAAIA,EAAMC,eAAN,MAAJ,IAIH,SAAAD,GAAK,OAAIA,EAAMC,eAAN,MAAJ,IAIdC,EAAeN,EAAAA,EAAAA,GAAH,4OAeZO,EAAaP,EAAAA,EAAAA,OAAH,ykBACX,SAAAI,GAAK,OAAIA,EAAMI,QAAN,QAAJ,IAIN,SAAAJ,GAAK,OAAKA,EAAMK,MAAQL,EAAMK,MAAQ,oBAAjC,IAuBHC,EAAiBV,EAAAA,EAAAA,EAAH,4pB,2KCvFdW,EAAeX,EAAAA,EAAAA,QAAH,gHAOZY,EAAOZ,EAAAA,EAAAA,KAAH,yOAaJa,EAAQb,EAAAA,EAAAA,MAAH,wCAILc,GAAQd,EAAAA,EAAAA,GAAOe,EAAAA,EAAPf,CAAH,wCAILgB,EAAYhB,EAAAA,EAAAA,OAAH,mM,iDC2DtB,EA9EkB,WAChB,OAAsCiB,EAAAA,EAAAA,WAAS,GAA/C,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,KAE/BC,EAAAA,EAAAA,YAAU,WACJH,GACFF,EAAS,SAEZ,GAAE,CAACE,EAAYF,IAEhB,IAAMM,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,GACG,0FACPE,MAAM,4GACNC,SAAS,0FACZC,SAAUJ,EAAAA,GACA,mFACPK,IAAI,EAAG,2MACPF,SAAS,qFAGRG,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbN,MAAO,GACPE,SAAU,IAEZL,iBAAAA,EACAU,SAAU,SAAAC,GACRnB,GAASoB,EAAAA,EAAAA,IAAMD,GAChB,IAGH,OACE,SAAC5B,EAAD,WACE,UAACC,EAAD,CAAM0B,SAAUH,EAAOM,aAAvB,WACE,SAAC5B,EAAD,WACE,SAACC,EAAD,CACEkB,UAAQ,EACRU,KAAK,OACLC,GAAG,QACHC,KAAK,QACLC,MAAM,8FACNC,MAAOX,EAAOI,OAAOR,MACrBgB,SAAUZ,EAAOa,aACjBC,OAAQd,EAAOe,WACfC,MAAOhB,EAAOiB,QAAQrB,OAASsB,QAAQlB,EAAOmB,OAAOvB,OACrDwB,WAAYpB,EAAOiB,QAAQrB,OAASI,EAAOmB,OAAOvB,MAClDyB,QAAQ,gBAGZ,UAAC3C,EAAD,YACE,SAACC,EAAD,CACEkB,UAAQ,EACRU,KAAMxB,EAAe,WAAa,OAClCyB,GAAG,WACHC,KAAK,WACLC,MAAM,uCACNC,MAAOX,EAAOI,OAAON,SACrBc,SAAUZ,EAAOa,aACjBC,OAAQd,EAAOe,WACfC,MAAOhB,EAAOiB,QAAQnB,UAAYoB,QAAQlB,EAAOmB,OAAOrB,UACxDsB,WAAYpB,EAAOiB,QAAQnB,UAAYE,EAAOmB,OAAOrB,SACrDuB,QAAQ,cAEV,SAACxC,EAAD,CAAW0B,KAAK,SAASe,QAAS,kBAAMtC,GAAeD,EAArB,EAAlC,SACGA,GAAe,SAAC,MAAD,KAAY,SAAC,MAAD,UAGhC,SAAC,KAAD,CAAYwB,KAAK,SAASjC,MAAM,qBAAhC,SAAqD,6CAM5D,C,wGCzFM,IAOMiB,EAAmB,SAAAgC,GAAK,OAAIA,EAAMC,KAAKnC,UAAf,EAExBoC,EAAa,SAAAF,GAAK,OAAIA,EAAMC,KAAKE,IAAf,EAMlBC,EAAuB,SAAAJ,GAAK,OAAIA,EAAMC,KAAKI,cAAf,C","sources":["components/Global/Global.styled.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx","redux/auth/authSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 60px;\n  padding-bottom: ${props => props.paddingBottom && `60px`};\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: ${props => props.paddingBottom && `80px`};\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n//  import { FiEye, FiEyeOff } from 'react-icons/fi';\n\nexport const LoginWrapper = styled.section`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  gap: 30px;\n  padding: 50px;\n  width: 400px;\n  color: black;\n  background-color: white;\n  border-radius: 12px;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const HiddenBtn = styled.button`\n  position: absolute;\n  top: 50%;\n  right: 50px;\n  transform: translate(0, 20%);\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport { LoginWrapper, Label, Form, Input, HiddenBtn } from './Login.styled';\nimport { FiEye, FiEyeOff } from 'react-icons/fi';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { login } from 'redux/auth/authOperations';\nimport { selectIsLoggedIn } from 'redux/auth/authSelectors';\n\nconst LoginPage = () => {\n  const [isHiddenPass, setHiddenPass] = useState(true);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      navigate('/admin');\n    }\n  }, [isLoggedIn, navigate]);\n\n  const validationSchema = yup.object().shape({\n    email: yup\n      .string('Введіть ел.пошту')\n      .email('Некоректна ел.пошта')\n      .required('Введіть ел.пошту'),\n    password: yup\n      .string('Введіть пароль')\n      .min(8, 'Пароль повинен мати не менше 8 символів')\n      .required('Введіть пароль'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema,\n    onSubmit: values => {\n      dispatch(login(values));\n    },\n  });\n\n  return (\n    <LoginWrapper>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          <Input\n            required\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            label=\"Електронна пошта\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n            variant=\"standard\"\n          />\n        </Label>\n        <Label>\n          <Input\n            required\n            type={isHiddenPass ? 'password' : 'text'}\n            id=\"password\"\n            name=\"password\"\n            label=\"Пароль\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n            variant=\"standard\"\n          />\n          <HiddenBtn type=\"button\" onClick={() => setHiddenPass(!isHiddenPass)}>\n            {isHiddenPass ? <FiEye /> : <FiEyeOff />}\n          </HiddenBtn>\n        </Label>\n        <MainButton type=\"submit\" color=\"var(--black-color)\">\n          Увійти\n        </MainButton>\n      </Form>\n    </LoginWrapper>\n  );\n};\n\nexport default LoginPage;\n","export const selectAuth = state => {\n  const { isLoggedIn, token } = state.auth;\n  return { isLoggedIn, token };\n};\n\nexport const selectIsAuthLoading = state => state.auth.isLoading;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectError = state => state.auth.error;\n\nexport const selectToken = state => state.auth.token;\n\nexport const selectAdministrators = state => state.auth.administrators;\n"],"names":["MainContainer","styled","AdminContainer","HeaderContainer","Section","props","paddingBottom","SectionTitle","MainButton","margin","color","MainLinkButton","LoginWrapper","Form","Label","Input","TextField","HiddenBtn","useState","isHiddenPass","setHiddenPass","dispatch","useDispatch","navigate","useNavigate","isLoggedIn","useSelector","selectIsLoggedIn","useEffect","validationSchema","yup","shape","email","required","password","min","formik","useFormik","initialValues","onSubmit","values","login","handleSubmit","type","id","name","label","value","onChange","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","variant","onClick","state","auth","selectUser","user","selectAdministrators","administrators"],"sourceRoot":""}