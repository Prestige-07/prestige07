{"version":3,"file":"static/js/546.259ea7b0.chunk.js","mappings":"6WAUaA,GAPQC,EAAAA,EAAAA,GAAH,4GAOEA,EAAAA,EAAAA,KAAH,4KAUJC,EAAQD,EAAAA,EAAAA,MAAH,8GAOLE,EAAYF,EAAAA,EAAAA,EAAH,+CAITG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,EAAPJ,CAAH,wCAILK,GAAaL,EAAAA,EAAAA,GAAOM,EAAAA,EAAPN,CAAH,wCAIVO,GAAeP,EAAAA,EAAAA,GAAOQ,EAAAA,EAAPR,CAAH,sBAEZS,GAAeT,EAAAA,EAAAA,GAAOU,EAAAA,EAAPV,CAAH,qB,mNCvCZW,EAAgBX,EAAAA,EAAAA,IAAH,6RAiBbY,EAAiBZ,EAAAA,EAAAA,IAAH,yMAWda,EAAUb,EAAAA,EAAAA,QAAH,qLAEA,SAAAc,GAAK,OAAIA,EAAMC,eAAN,MAAJ,IAIA,SAAAD,GAAK,OAAIA,EAAMC,eAAN,MAAJ,IAIjBC,EAAehB,EAAAA,EAAAA,GAAH,4OAeZiB,EAAajB,EAAAA,EAAAA,OAAH,mlBACnB,SAAAc,GAAK,OACLA,EAAMI,UAAN,2DADK,IAOG,SAAAJ,GAAK,OAAIA,EAAMK,QAAN,QAAJ,IAIN,SAAAL,GAAK,OAAKA,EAAMM,MAAQN,EAAMM,MAAQ,oBAAjC,IAuBHC,EAAiBrB,EAAAA,EAAAA,EAAH,4pB,6NCvFdsB,EAAWtB,EAAAA,EAAAA,IAAH,6bAkBL,SAAAc,GAAK,OAAKA,EAAMS,OAAS,UAAY,QAAhC,IACR,SAAAT,GAAK,OAAKA,EAAMS,OAAS,IAAM,GAA1B,IACE,SAAAT,GAAK,OAAKA,EAAMS,OAAS,OAAS,MAA7B,IACV,SAAAT,GAAK,OAAKA,EAAMS,OAAS,WAAa,YAAjC,IAGPC,EAAQxB,EAAAA,EAAAA,IAAH,uWAoBLyB,EAAQzB,EAAAA,EAAAA,GAAH,4GAOL0B,EAAO1B,EAAAA,EAAAA,EAAH,iGAMJ2B,EAAc3B,EAAAA,EAAAA,OAAH,kJAWX4B,GAAY5B,EAAAA,EAAAA,GAAO6B,EAAAA,IAAP7B,CAAH,wD,8ECrET8B,EAAc,SAAAhB,GACzB,OACE,SAAC,KAAD,CAAUiB,QAAS,SAAAC,GAAC,OAAIlB,EAAMmB,oBAAoBD,EAA9B,EAAkCT,OAAQT,EAAMS,OAApE,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAaQ,QAAS,kBAAMjB,EAAMoB,iBAAZ,EAAtB,UACE,SAAC,KAAD,MAEDpB,EAAMqB,aAId,C,2KCXYC,EAAOpC,EAAAA,EAAAA,GAAH,iG,GAOGA,EAAAA,EAAAA,GAAH,6YAoBGA,EAAAA,EAAAA,EAAH,sBAEGA,EAAAA,EAAAA,OAAH,2E,mBC5BJqC,EAAOrC,EAAAA,EAAAA,GAAH,uZAsBJD,GAFOC,EAAAA,EAAAA,EAAH,sBAEGA,EAAAA,EAAAA,KAAH,+GAOJsC,EAAStC,EAAAA,EAAAA,OAAH,kPAEV,SAAAc,GAAK,OAAIA,EAAMyB,GAAV,IACH,SAAAzB,GAAK,OAAIA,EAAM0B,KAAV,IAWHC,GAAWzC,EAAAA,EAAAA,GAAO0C,EAAAA,IAAP1C,CAAH,2EAMR2C,GAAW3C,EAAAA,EAAAA,GAAO4C,EAAAA,IAAP5C,CAAH,0EAMR6C,GAAa7C,EAAAA,EAAAA,GAAO8C,EAAAA,IAAP9C,CAAH,wEAMVC,EAAQD,EAAAA,EAAAA,MAAH,kEAKLM,EAASN,EAAAA,EAAAA,OAAH,gSAaNG,EAAQH,EAAAA,EAAAA,MAAH,+RAaL+C,EAAW/C,EAAAA,EAAAA,SAAH,gT,SCzERgD,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAWXC,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAMT,EAAQS,MAAQ,GACtBC,MAAOV,EAAQU,OAAS,GACxBC,gBAAiBX,EAAQW,iBAAmB,GAC5CC,cAAeZ,EAAQY,gBAAiB,GAE1CC,SAAU,SAAAC,GACRV,GAASW,EAAAA,EAAAA,IAAkB,CAAEC,IAAKhB,EAAQgB,IAAKC,KAAMH,KACrDX,GAAQ,EACT,IAGH,OACE,UAAC,EAAD,YACE,UAACrD,EAAD,CAAM+D,SAAUP,EAAOY,aAAvB,WACE,UAAClE,EAAD,WAAO,mCAEL,SAAC8C,EAAD,CACEqB,UAAQ,EACRC,KAAK,OACLC,GAAG,OACHZ,KAAK,OACLa,MAAOhB,EAAOQ,OAAOL,KACrBc,SAAUjB,EAAOkB,aACjBC,UAAWvB,QAGf,UAAClD,EAAD,WAAO,qDAEL,SAACE,EAAD,CACEiE,UAAQ,EACRC,KAAK,SACLC,GAAG,QACHZ,KAAK,QACLa,MAAOhB,EAAOQ,OAAOJ,MACrBa,SAAUjB,EAAOkB,aACjBC,UAAWvB,QAGf,UAAClD,EAAD,WAAO,mEAEL,SAACE,EAAD,CACEiE,UAAQ,EACRC,KAAK,SACLC,GAAG,kBACHZ,KAAK,kBACLa,MAAOhB,EAAOQ,OAAOH,gBACrBY,SAAUjB,EAAOkB,aACjBC,UAAWvB,QAGf,UAAClD,EAAD,WAAO,kEAEL,UAACK,EAAD,CACE8D,UAAQ,EACRE,GAAG,gBACHZ,KAAK,gBACLa,MAAOhB,EAAOQ,OAAOF,cACrBW,SAAUjB,EAAOkB,aACjBC,UAAWvB,EANb,WAQE,mBAAQoB,OAAO,EAAf,SAAsB,kBACtB,mBAAQA,OAAO,EAAf,SAAqB,6BAGxBpB,IACC,SAACb,EAAD,CAAQ+B,KAAK,SAAS9B,IAAI,OAAOC,MAAM,MAAvC,UACE,SAACG,EAAD,UAIN,SAACL,EAAD,CACE+B,KAAK,SACLtC,QAAS,kBAAMqB,GAASD,EAAf,EACTZ,IAAI,MACJC,MAAM,MAJR,UAME,SAACC,EAAD,OAEAU,IACA,SAACb,EAAD,CACE+B,KAAK,SACLtC,QAAS,kBA5FWuC,EA4FerB,EAAQgB,SA3F3BU,OAAOC,QAC3B,kNAGAvB,GAASwB,EAAAA,EAAAA,IAAkBP,KALH,IAAAA,CA4FX,EACT/B,IAAI,OACJC,MAAM,MAJR,UAME,SAACK,EAAD,QAKT,ECzHYiC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAC7B,OACE,SAAC7C,EAAD,UACG2C,EAASG,KAAI,SAAAjC,GAAO,OACnB,SAACD,EAAD,CAAgCC,QAASA,GAAtBA,EAAQgB,IADR,KAK1B,E,wCCAYkB,EAAkB,SAAArE,GAC7B,IAAMuC,GAAWC,EAAAA,EAAAA,MAEXpB,EAAkB,WACtBpB,EAAMoB,iBAAgB,EACvB,EAQKqB,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,KAAM,GACNC,MAAO,GACPE,eAAe,EACfD,gBAAiB,IAEnBE,SAAU,SAAAC,GACRV,GAAS+B,EAAAA,EAAAA,IAAWrB,IACpB7B,GACD,IAGH,OACE,UAACJ,EAAA,EAAD,CACEI,gBAAiBA,EACjBD,oBAtBwB,SAAAD,GACtBA,EAAEqD,SAAWrD,EAAEsD,eACjBpD,GAEH,EAmBGX,OAAQT,EAAMS,OAHhB,WAKE,SAAC,KAAD,UAAO,qFACP,UAAC,KAAD,CAAMuC,SAAUP,EAAOY,aAAvB,WACE,SAAC,KAAD,CACEC,UAAQ,EACRC,KAAK,OACLC,GAAG,OACHZ,KAAK,OACL6B,MAAM,4EACNhB,MAAOhB,EAAOQ,OAAOL,KACrBc,SAAUjB,EAAOkB,aACjBe,QAAQ,WACRC,KAAK,WAEP,SAAC,KAAD,CACErB,UAAQ,EACRC,KAAK,OACLC,GAAG,QACHZ,KAAK,QACL6B,MAAM,sEACNhB,MAAOhB,EAAOQ,OAAOJ,MACrBa,SAAUjB,EAAOkB,aACjBe,QAAQ,WACRC,KAAK,WAEP,UAAC,KAAD,YACE,SAAC,KAAD,CACEC,QAASnC,EAAOQ,OAAOF,cACvBW,SAAU,kBACRjB,EAAOoC,cACL,iBACCpC,EAAOQ,OAAOF,cAHT,IAMV,uDAGJ,SAAC,KAAD,CACEO,UAAQ,EACRC,KAAK,SACLuB,WAAY,CAAEC,IAAK,KACnBvB,GAAG,kBACHZ,KAAK,kBACL6B,MAAM,gHACNhB,MAAOhB,EAAOQ,OAAOH,gBACrBY,SAAUjB,EAAOkB,aACjBe,QAAQ,WACRC,KAAK,WAGP,SAAC,KAAD,CAAYpB,KAAK,SAASjD,MAAM,qBAAqBD,QAAQ,EAA7D,SAAmE,8CAM1E,E,UCtDD,EAjCqB,WACnB,OAAoC+B,EAAAA,EAAAA,WAAS,GAA7C,eAAO4C,EAAP,KAAoBC,EAApB,KACMC,GAAYhB,EAAAA,EAAAA,IAAYiB,EAAAA,GAExB5C,GAAWC,EAAAA,EAAAA,OAEjB4C,EAAAA,EAAAA,YAAU,WACR7C,GAAS8C,EAAAA,EAAAA,MACV,GAAE,CAAC9C,IAMJ,OACE,UAAC,KAAD,CAAStC,eAAe,EAAxB,WACE,SAAC,KAAD,CACEsD,KAAK,SACLtC,QAAS,kBAAMgE,GAAa,EAAnB,EACT7E,UAAU,EAHZ,SAIC,qFAGD,SAAC,KAAD,UAAc,gDAEd,SAAC4D,EAAD,KAEA,SAACK,EAAD,CAAiBjD,gBAjBG,WACtB6D,GAAa,EACd,EAesDxE,OAAQuE,IAC1DE,IAAa,SAACI,EAAA,EAAD,MAGnB,C,8EC9CM,IAAMnB,EAAuB,SAAAoB,GAAK,OAAIA,EAAMtB,SAASuB,KAAnB,EAE5BL,EAA0B,SAAAI,GAAK,OAAIA,EAAMtB,SAASiB,SAAnB,C","sources":["components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/Modals/Modal.styles.jsx","components/Modals/ModalLayout.jsx","components/AdminPage/ServicesPage/ServicesList/ServicesList.styled.jsx","components/AdminPage/ServicesPage/ServiceItem/ServiceItem.styled.jsx","components/AdminPage/ServicesPage/ServiceItem/ServiceItem.jsx","components/AdminPage/ServicesPage/ServicesList/ServicesList.jsx","components/Modals/ModalAddService/ModalAddService.jsx","pages/Services/Services.jsx","redux/services/servicesSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  max-width: 100%;\n  color: var(--label-color);\n  font-size: 12px;\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n\n  // @media screen and (min-width: 768px) {\n  //   padding-top: 80px;\n  //   padding-bottom: ${props => props.paddingBottom && `80px`};\n  // }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: var(--backdrop-color);\n\n  transition: transform var(--transition), opacity var(--transition),\n    visibility var(--transition);\n\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  transform: ${props => (props.isOpen ? 'scale(1)' : 'scale(1.5)')};\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n\n  padding: 30px;\n  max-width: 480px;\n  width: 100%;\n  background-color: var(--white-color);\n\n  border: 4px solid var(--accent-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: var(--black-color);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(AiOutlineClose)`\n  width: 30px;\n  height: 30px;\n`;\n","import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)} isOpen={props.isOpen}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  flex-basis: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 30px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 60px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Edit = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n","import styled from '@emotion/styled';\nimport { FiEdit, FiSave, FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px 40px 12px 12px;\n  width: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 15px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const EditIcon = styled(FiEdit)`\n  width: 20px;\n  height: 20px;\n  color: yellow;\n`;\n\nexport const SaveIcon = styled(FiSave)`\n  width: 20px;\n  height: 20px;\n  color: green;\n`;\n\nexport const DeleteIcon = styled(FiTrash2)`\n  width: 20px;\n  height: 20px;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Select = styled.select`\n  margin-left: 8px;\n  padding-left: 8px;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-left: 8px;\n  padding-left: 8px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  margin-left: 8px;\n  padding-left: 8px;\n  resize: none;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  updateServiceById,\n  deleteServiceById,\n} from 'redux/services/servicesOperations';\n\nimport {\n  Item,\n  Button,\n  Form,\n  EditIcon,\n  SaveIcon,\n  DeleteIcon,\n  Label,\n  Select,\n  TextArea,\n  Input,\n} from './ServiceItem.styled';\n\nexport const ServicesItem = ({ service }) => {\n  const [isEdit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDeleteService = id => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити послугу?'\n    );\n    if (confirmDelete) {\n      dispatch(deleteServiceById(id));\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: service.name || '',\n      price: service.price || '',\n      employeePercent: service.employeePercent || '',\n      pricePerMeter: service.pricePerMeter || false,\n    },\n    onSubmit: values => {\n      dispatch(updateServiceById({ _id: service._id, data: values }));\n      setEdit(false);\n    },\n  });\n\n  return (\n    <Item>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>\n          Назва:\n          <TextArea\n            required\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          Вартість:\n          <Input\n            required\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            value={formik.values.price}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          %,працівнику:\n          <Input\n            required\n            type=\"number\"\n            id=\"employeePercent\"\n            name=\"employeePercent\"\n            value={formik.values.employeePercent}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          Ціна за м²/шт:\n          <Select\n            required\n            id=\"pricePerMeter\"\n            name=\"pricePerMeter\"\n            value={formik.values.pricePerMeter}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          >\n            <option value={false}>Ні</option>\n            <option value={true}>Так</option>\n          </Select>\n        </Label>\n        {isEdit && (\n          <Button type=\"submit\" top=\"40px\" right=\"8px\">\n            <SaveIcon />\n          </Button>\n        )}\n      </Form>\n      <Button\n        type=\"button\"\n        onClick={() => setEdit(!isEdit)}\n        top=\"8px\"\n        right=\"8px\"\n      >\n        <EditIcon />\n      </Button>\n      {!isEdit && (\n        <Button\n          type=\"button\"\n          onClick={() => handleDeleteService(service._id)}\n          top=\"40px\"\n          right=\"8px\"\n        >\n          <DeleteIcon />\n        </Button>\n      )}\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectGetAllServices } from 'redux/services/servicesSelectors';\n\nimport { List } from './ServicesList.styled';\nimport { ServicesItem } from '../ServiceItem/ServiceItem';\n\nexport const ServicesList = () => {\n  const services = useSelector(selectGetAllServices);\n  return (\n    <List>\n      {services.map(service => (\n        <ServicesItem key={service._id} service={service} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport {\n  Form,\n  Label,\n  Input,\n  FormCheckbox,\n} from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addService } from 'redux/services/servicesOperations';\n\nexport const ModalAddService = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      price: '',\n      pricePerMeter: false,\n      employeePercent: '',\n    },\n    onSubmit: values => {\n      dispatch(addService(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={props.isOpen}\n    >\n      <Title>Додати послугу</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Назва послуги\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Input\n          required\n          type=\"text\"\n          id=\"price\"\n          name=\"price\"\n          label=\"Ціна послуги\"\n          value={formik.values.price}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Label>\n          <FormCheckbox\n            checked={formik.values.pricePerMeter}\n            onChange={() =>\n              formik.setFieldValue(\n                'pricePerMeter',\n                !formik.values.pricePerMeter\n              )\n            }\n          />\n          Ціна за м²\n        </Label>\n        <Input\n          required\n          type=\"number\"\n          inputProps={{ min: '0' }}\n          id=\"employeePercent\"\n          name=\"employeePercent\"\n          label=\"Відсоток працівнику\"\n          value={formik.values.employeePercent}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getAllServices } from 'redux/services/servicesOperations';\n\nimport { ServicesList } from 'components/AdminPage/ServicesPage/ServicesList/ServicesList';\nimport {\n  Section,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { ModalAddService } from 'components/Modals/ModalAddService/ModalAddService';\nimport { selectIsLoadingServices } from 'redux/services/servicesSelectors';\nimport { Loading } from 'components/Loading/Loading';\n\nconst ServicesPage = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const isLoading = useSelector(selectIsLoadingServices);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllServices());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <Section paddingBottom={true}>\n      <MainButton\n        type=\"button\"\n        onClick={() => setOpenModal(true)}\n        position={true}\n      >\n        Додати послугу\n      </MainButton>\n      <SectionTitle>Послуги</SectionTitle>\n\n      <ServicesList />\n\n      <ModalAddService handleExitModal={handleExitModal} isOpen={isOpenModal} />\n      {isLoading && <Loading />}\n    </Section>\n  );\n};\n\nexport default ServicesPage;\n","export const selectGetAllServices = state => state.services.items;\n\nexport const selectIsLoadingServices = state => state.services.isLoading;\n"],"names":["Form","styled","Label","LabelText","Input","TextField","FormSelect","Select","SelectOption","MenuItem","FormCheckbox","Checkbox","MainContainer","AdminContainer","Section","props","paddingBottom","SectionTitle","MainButton","position","margin","color","MainLinkButton","Backdrop","isOpen","Modal","Title","Text","CloseButton","CloseIcon","AiOutlineClose","ModalLayout","onClick","e","handleBackdropClick","handleExitModal","children","List","Item","Button","top","right","EditIcon","FiEdit","SaveIcon","FiSave","DeleteIcon","FiTrash2","TextArea","ServicesItem","service","useState","isEdit","setEdit","dispatch","useDispatch","formik","useFormik","initialValues","name","price","employeePercent","pricePerMeter","onSubmit","values","updateServiceById","_id","data","handleSubmit","required","type","id","value","onChange","handleChange","disabled","window","confirm","deleteServiceById","ServicesList","services","useSelector","selectGetAllServices","map","ModalAddService","addService","target","currentTarget","label","variant","size","checked","setFieldValue","inputProps","min","isOpenModal","setOpenModal","isLoading","selectIsLoadingServices","useEffect","getAllServices","Loading","state","items"],"sourceRoot":""}