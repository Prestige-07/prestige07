{"version":3,"file":"static/js/546.b56fb3c1.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/Modals/Modal.styles.jsx","components/Modals/ModalLayout.jsx","components/AdminPage/ServicesPage/ServicesList/ServicesList.styled.jsx","components/AdminPage/ServicesPage/ServiceItem/ServiceItem.styled.jsx","components/AdminPage/ServicesPage/ServiceItem/ServiceItem.jsx","components/AdminPage/ServicesPage/ServicesList/ServicesList.jsx","components/Modals/ModalAddService/ModalAddService.jsx","pages/Services/Services.jsx","redux/services/servicesSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  max-width: 100%;\n  color: var(--label-color);\n  font-size: 12px;\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: var(--backdrop-color);\n\n  transition: transform var(--transition), opacity var(--transition),\n    visibility var(--transition);\n\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  transform: ${props => (props.isOpen ? 'scale(1)' : 'scale(1.5)')};\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n\n  padding: 30px;\n  max-width: 480px;\n  width: 100%;\n\n  background-color: var(--white-color);\n\n  border: 4px solid var(--accent-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: var(--black-color);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(AiOutlineClose)`\n  width: 30px;\n  height: 30px;\n`;\n","import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)} isOpen={props.isOpen}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  flex-basis: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 30px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 60px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Edit = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n","import styled from '@emotion/styled';\nimport { FiEdit, FiSave, FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px 40px 12px 12px;\n  width: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 15px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const EditIcon = styled(FiEdit)`\n  width: 20px;\n  height: 20px;\n  color: yellow;\n`;\n\nexport const SaveIcon = styled(FiSave)`\n  width: 20px;\n  height: 20px;\n  color: green;\n`;\n\nexport const DeleteIcon = styled(FiTrash2)`\n  width: 20px;\n  height: 20px;\n  color: red;\n`;\n\nexport const TextWrapper = styled.div`\n  display: flex;\n  gap: 8px;\n`;\n\nexport const Text = styled.p``;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Select = styled.select`\n  padding-left: 8px;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  padding-left: 8px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n\nexport const TextArea = styled.textarea`\n  margin-left: 8px;\n  padding-left: 8px;\n  resize: none;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\n\nimport {\n  updateServiceById,\n  deleteServiceById,\n} from 'redux/services/servicesOperations';\n\nimport {\n  Item,\n  Button,\n  Form,\n  EditIcon,\n  SaveIcon,\n  DeleteIcon,\n  Label,\n  Select,\n  TextArea,\n  Input,\n  TextWrapper,\n  Text,\n} from './ServiceItem.styled';\n\nexport const ServicesItem = ({ service }) => {\n  const [isEdit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDeleteService = id => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити послугу?'\n    );\n    if (confirmDelete) {\n      dispatch(deleteServiceById(id));\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: service.name || '',\n      price: service.price || '',\n      employeePercent: service.employeePercent || '',\n      pricePerMeter: service.pricePerMeter || false,\n    },\n    onSubmit: values => {\n      dispatch(updateServiceById({ _id: service._id, data: values }));\n      setEdit(false);\n    },\n  });\n\n  return (\n    <Item>\n      <Form onSubmit={formik.handleSubmit}>\n        {isEdit ? (\n          <Label>\n            Назва:\n            <TextArea\n              required\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              value={formik.values.name}\n              onChange={formik.handleChange}\n              disabled={!isEdit}\n            />\n          </Label>\n        ) : (\n          <TextWrapper>\n            <Text>Назва:</Text>\n            <Text>{service.name}</Text>\n          </TextWrapper>\n        )}\n        <Label>\n          Вартість:\n          <Input\n            required\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            value={formik.values.price}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          %,працівнику:\n          <Input\n            required\n            type=\"number\"\n            id=\"employeePercent\"\n            name=\"employeePercent\"\n            value={formik.values.employeePercent}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          Ціна за м²/шт:\n          <Select\n            required\n            id=\"pricePerMeter\"\n            name=\"pricePerMeter\"\n            value={formik.values.pricePerMeter}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          >\n            <option value={false}>Ні</option>\n            <option value={true}>Так</option>\n          </Select>\n        </Label>\n        {isEdit && (\n          <Button type=\"submit\" title=\"Зберегти зміни\" top=\"40px\" right=\"8px\">\n            <SaveIcon />\n          </Button>\n        )}\n      </Form>\n      <Button\n        type=\"button\"\n        title=\"Редагувати\"\n        onClick={() => setEdit(!isEdit)}\n        top=\"8px\"\n        right=\"8px\"\n      >\n        <EditIcon />\n      </Button>\n      {!isEdit && (\n        <Button\n          type=\"button\"\n          title=\"Видалити\"\n          onClick={() => handleDeleteService(service._id)}\n          top=\"40px\"\n          right=\"8px\"\n        >\n          <DeleteIcon />\n        </Button>\n      )}\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectGetAllServices } from 'redux/services/servicesSelectors';\n\nimport { List } from './ServicesList.styled';\nimport { ServicesItem } from '../ServiceItem/ServiceItem';\n\nexport const ServicesList = () => {\n  const services = useSelector(selectGetAllServices);\n  return (\n    <List>\n      {services.map(service => (\n        <ServicesItem key={service._id} service={service} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport {\n  Form,\n  Label,\n  Input,\n  FormCheckbox,\n} from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addService } from 'redux/services/servicesOperations';\n\nexport const ModalAddService = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      price: '',\n      pricePerMeter: false,\n      employeePercent: '',\n    },\n    onSubmit: values => {\n      dispatch(addService(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={props.isOpen}\n    >\n      <Title>Додати послугу</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Назва послуги\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Input\n          required\n          type=\"text\"\n          id=\"price\"\n          name=\"price\"\n          label=\"Ціна послуги\"\n          value={formik.values.price}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Label>\n          <FormCheckbox\n            checked={formik.values.pricePerMeter}\n            onChange={() =>\n              formik.setFieldValue(\n                'pricePerMeter',\n                !formik.values.pricePerMeter\n              )\n            }\n          />\n          Ціна за м²\n        </Label>\n        <Input\n          required\n          type=\"number\"\n          inputProps={{ min: '0' }}\n          id=\"employeePercent\"\n          name=\"employeePercent\"\n          label=\"Відсоток працівнику\"\n          value={formik.values.employeePercent}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { getAllServices } from 'redux/services/servicesOperations';\n\nimport { ServicesList } from 'components/AdminPage/ServicesPage/ServicesList/ServicesList';\nimport {\n  Section,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { ModalAddService } from 'components/Modals/ModalAddService/ModalAddService';\nimport { selectIsLoadingServices } from 'redux/services/servicesSelectors';\nimport { Loading } from 'components/Loading/Loading';\n\nconst ServicesPage = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const isLoading = useSelector(selectIsLoadingServices);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllServices());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <Section paddingBottom={true}>\n      <MainButton\n        type=\"button\"\n        onClick={() => setOpenModal(true)}\n        position={true}\n      >\n        Додати послугу\n      </MainButton>\n      <SectionTitle>Послуги</SectionTitle>\n\n      <ServicesList />\n\n      <ModalAddService handleExitModal={handleExitModal} isOpen={isOpenModal} />\n      {isLoading && <Loading />}\n    </Section>\n  );\n};\n\nexport default ServicesPage;\n","export const selectGetAllServices = state => state.services.items;\n\nexport const selectIsLoadingServices = state => state.services.isLoading;\n"],"names":["styled","h3","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","Label","label","_templateObject3","LabelText","p","_templateObject4","Input","TextField","_templateObject5","FormSelect","Select","_templateObject6","SelectOption","MenuItem","_templateObject7","FormCheckbox","Checkbox","_templateObject8","MainContainer","div","AdminContainer","Section","section","props","paddingBottom","SectionTitle","h2","MainButton","button","position","margin","color","MainLinkButton","a","Backdrop","isOpen","Modal","Title","Text","CloseButton","CloseIcon","AiOutlineClose","ModalLayout","_jsx","onClick","e","handleBackdropClick","children","_jsxs","handleExitModal","List","ul","li","Item","Button","top","right","EditIcon","FiEdit","SaveIcon","FiSave","DeleteIcon","FiTrash2","TextWrapper","_templateObject9","select","_templateObject10","input","_templateObject11","TextArea","textarea","_templateObject12","ServicesItem","_ref","service","isEdit","setEdit","useState","dispatch","useDispatch","formik","useFormik","initialValues","name","price","employeePercent","pricePerMeter","onSubmit","values","updateServiceById","_id","data","handleSubmit","required","type","id","value","onChange","handleChange","disabled","title","handleDeleteService","window","confirm","deleteServiceById","ServicesList","services","useSelector","selectGetAllServices","map","ModalAddService","addService","target","currentTarget","variant","size","checked","setFieldValue","inputProps","min","ServicesPage","isOpenModal","setOpenModal","isLoading","selectIsLoadingServices","useEffect","getAllServices","Loading","state","items"],"sourceRoot":""}