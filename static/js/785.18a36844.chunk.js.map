{"version":3,"file":"static/js/785.18a36844.chunk.js","mappings":"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","sources":["components/Global/Global.styled.jsx","components/AdminPage/Modals/ModalAddEmployee/ModalAddEmployee.jsx","pages/Employees/Employees.jsx","redux/employees/employeesSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-left: 50px;\n  padding-right: 50px;\n  // max-width: 1200px;\n\n  // margin-left: auto;\n  // margin-right: auto;\n  // padding-left: 15px;\n  // padding-right: 15px;\n\n  // @media screen and (min-width: 480px) {\n  //   max-width: 480px;\n  // }\n\n  // @media screen and (min-width: 768px) {\n  //   max-width: 768px;\n  // }\n\n  // @media screen and (min-width: 1200px) {\n  //   max-width: 1200px;\n  // }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 40px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 40px;\n  padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\ntext - align: center;\n  // margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    // margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--white-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n  /* Інші стилі */\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport {\n  Backdrop,\n  Modal,\n  Title,\n  CloseButton,\n  Form,\n  Label,\n  Input,\n  CloseIcon,\n} from '../Modal.styles';\nimport { MainButton } from 'components/Global/Global.styled';\nimport { Checkbox } from '@mui/material';\n\nimport { addEmployee } from 'redux/employees/employeesOperations';\n\nexport const ModalAddEmployee = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n      criminal: false,\n      worksFromDate: '',\n    },\n    onSubmit: values => {\n      dispatch(addEmployee(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <Backdrop onClick={handleBackdropClick}>\n      <Modal>\n        <Title>Додати працівника</Title>\n        <CloseButton type=\"button\" onClick={handleExitModal}>\n          <CloseIcon />\n        </CloseButton>\n        <Form onSubmit={formik.handleSubmit}>\n          <Input\n            required\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            label=\"Ім'я працівника\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n          />\n          <Input\n            required\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            label=\"Номер телефона\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n          />\n          <Label>\n            Працює з:\n            <Input\n              required\n              type=\"date\"\n              id=\"worksFromDate\"\n              name=\"worksFromDate\"\n              value={formik.values.worksFromDate}\n              onChange={formik.handleChange}\n              variant=\"filled\"\n              style={{ width: '100%' }}\n            />\n          </Label>\n          <Label>\n            <Checkbox\n              checked={formik.values.criminal}\n              onChange={() =>\n                formik.setFieldValue('criminal', !formik.values.criminal)\n              }\n            />\n            Судимість\n          </Label>\n\n          <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n            Додати\n          </MainButton>\n        </Form>\n      </Modal>\n    </Backdrop>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  HeaderContainer,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { ModalAddEmployee } from 'components/AdminPage/Modals/ModalAddEmployee/ModalAddEmployee';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getAllEmployees } from 'redux/employees/employeesOperations';\nimport {\n  selectEmployees,\n  selectIsLoadingEmployees,\n} from 'redux/employees/employeesSelectors';\n\nconst EmployeesPage = () => {\n  const employees = useSelector(selectEmployees);\n  const isLoading = useSelector(selectIsLoadingEmployees);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllEmployees());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  function calculateAge(date) {\n    const startDate = new Date(date);\n    const endDate = new Date();\n    let years = endDate.getFullYear() - startDate.getFullYear();\n    let months = endDate.getMonth() - startDate.getMonth();\n\n    if (months < 0) {\n      years--;\n      months += 12;\n    }\n\n    return `${years} р. ${months} міс.`;\n  }\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <Section>\n      <HeaderContainer>\n        <SectionTitle>Працівники</SectionTitle>\n        <MainButton\n          type=\"button\"\n          onClick={() => setOpenModal(true)}\n          color=\"var(--white-color)\"\n        >\n          Додати працівника\n        </MainButton>\n      </HeaderContainer>\n\n      <ul\n        className=\"list\"\n        style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}\n      >\n        {employees.map(employee => (\n          <li key={employee._id}>\n            <p>{`Ім'я: ${employee.name}`}</p>\n            <p>{`Телефон: ${employee.phone}`}</p>\n            {employee.criminal && <p>Є судимість</p>}\n            <p>{`Працює: ${calculateAge(employee.worksFromDate)}`}</p>\n          </li>\n        ))}\n      </ul>\n      {isOpenModal && <ModalAddEmployee handleExitModal={handleExitModal} />}\n    </Section>\n  );\n};\n\nexport default EmployeesPage;\n","export const selectEmployees = state => state.employees.items;\n\nexport const selectIsLoadingEmployees = state => state.employees.isLoading;\n"],"names":["AdminContainer","styled","HeaderContainer","Section","SectionTitle","MainButton","props","margin","color","ModalAddEmployee","dispatch","useDispatch","handleExitModal","formik","useFormik","initialValues","name","phone","criminal","worksFromDate","onSubmit","values","addEmployee","onClick","e","target","currentTarget","type","handleSubmit","required","id","label","value","onChange","handleChange","variant","style","width","Checkbox","checked","setFieldValue","employees","useSelector","selectEmployees","isLoading","selectIsLoadingEmployees","useState","isOpenModal","setOpenModal","useEffect","getAllEmployees","calculateAge","date","startDate","Date","endDate","years","getFullYear","months","getMonth","Loading","className","display","flexDirection","gap","map","employee","_id","state","items"],"sourceRoot":""}