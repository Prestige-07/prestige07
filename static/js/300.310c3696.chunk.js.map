{"version":3,"file":"static/js/300.310c3696.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/Modals/Modal.styles.jsx","components/Modals/ModalLayout.jsx","components/AdminPage/EmployeesPage/EmployeesList/EmployeesList.styled.jsx","utils/calculateAgeToNow.js","components/AdminPage/EmployeesPage/EmployeesItem/EmployeesItem.styled.jsx","components/AdminPage/EmployeesPage/ImagesList/ImagesList.styled.jsx","components/Modals/ModalAddEmployeeImage/ModalAddEmployeeImage.jsx","components/AdminPage/EmployeesPage/ImagesItem/ImagesItem.styled.jsx","components/Modals/ModalOpenImage/ModalOpenImage.styled.jsx","components/Modals/ModalOpenImage/ModalOpenImage.jsx","components/AdminPage/EmployeesPage/ImagesItem/ImagesItem.jsx","components/AdminPage/EmployeesPage/ImagesList/ImagesList.jsx","components/AdminPage/EmployeesPage/EmployeesItem/EmployeesItem.jsx","components/AdminPage/EmployeesPage/EmployeesList/EmployeesList.jsx","components/Modals/ModalAddEmployee/ModalAddEmployee.jsx","pages/Employees/Employees.jsx","redux/employees/employeesSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  max-width: 100%;\n  color: var(--label-color);\n  font-size: 12px;\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1000;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  width: 100%;\n  height: 100%;\n  overflow: auto;\n  background-color: var(--backdrop-color);\n\n  transition: transform var(--transition), opacity var(--transition),\n    visibility var(--transition);\n\n  visibility: ${props => (props.isOpen ? 'visible' : 'hidden')};\n  opacity: ${props => (props.isOpen ? '1' : '0')};\n  pointer-events: ${props => (props.isOpen ? 'auto' : 'none')};\n  transform: ${props => (props.isOpen ? 'scale(1)' : 'scale(1.5)')};\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n\n  padding: 30px;\n  max-width: 480px;\n  width: 100%;\n\n  background-color: var(--white-color);\n\n  border: 4px solid var(--accent-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Text = styled.p`\n  text-align: center;\n  font-size: 20px;\n  color: var(--black-color);\n`;\n\nexport const CloseButton = styled.button`\n  position: absolute;\n  top: 0;\n  right: 0;\n\n  background-color: transparent;\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const CloseIcon = styled(AiOutlineClose)`\n  width: 30px;\n  height: 30px;\n`;\n","import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)} isOpen={props.isOpen}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  flex-basis: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 30px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 60px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Edit = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n","export function calculateAgeToNow(date) {\n  const startDate = new Date(date);\n  const endDate = new Date();\n  let years = endDate.getFullYear() - startDate.getFullYear();\n  let months = endDate.getMonth() - startDate.getMonth();\n\n  if (months < 0) {\n    years--;\n    months += 12;\n  }\n\n  return `${years} р. ${months} міс.`;\n}\n","import styled from '@emotion/styled';\nimport { FiEdit, FiSave, FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px 40px 12px 12px;\n  width: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 15px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const EditIcon = styled(FiEdit)`\n  width: 20px;\n  height: 20px;\n  color: yellow;\n`;\n\nexport const SaveIcon = styled(FiSave)`\n  width: 20px;\n  height: 20px;\n  color: green;\n`;\n\nexport const DeleteIcon = styled(FiTrash2)`\n  width: 20px;\n  height: 20px;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Select = styled.select`\n  padding-left: 8px;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  padding-left: 8px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n`;\n\nexport const AddBtn = styled.button`\n  width: 60px;\n  height: 60px;\n  font-size: 40px;\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Input } from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addImageToEmployee } from 'redux/employees/employeesOperations';\n\nexport const ModalAddEmployeeImage = ({ id, isOpen, handleExitModal }) => {\n  const [image, setImage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal();\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('employee', image);\n    dispatch(addImageToEmployee({ id, data: formData }));\n    handleExitModal();\n  };\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={isOpen}\n    >\n      <Title>Додати зображення</Title>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          required\n          type=\"file\"\n          id=\"employee\"\n          name=\"employee\"\n          onChange={e => setImage(e.currentTarget.files[0])}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n`;\n\nexport const Image = styled.img`\n  width: 60px;\n  height: 60px;\n  object-fit: cover;\n  border-radius: 8px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DelBtn = styled.button`\n  position: absolute;\n  top: 0;\n  right: -16px;\n  padding: 0;\n\n  background-color: transparent;\n\n  border: none;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: var(--transition);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DelIcon = styled(FiTrash2)`\n  color: red;\n`;\n","import styled from '@emotion/styled';\n\nexport const Image = styled.img`\n  max-height: 85vh;\n  object-fit: contain;\n`;\n","import { ModalLayout } from '../ModalLayout';\nimport { Image } from './ModalOpenImage.styled';\n\nexport const ModalOpenImage = props => {\n  const handleExitModal = () => props.handleExitModal();\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal();\n    }\n  };\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={props.isOpen}\n    >\n      <Image src={props.image} alt=\"Документ\" />\n    </ModalLayout>\n  );\n};\n","import { useState } from 'react';\nimport { Item, Image, DelBtn, DelIcon } from './ImagesItem.styled';\nimport { ModalOpenImage } from 'components/Modals/ModalOpenImage/ModalOpenImage';\n\nimport { deleteImageFromEmployee } from 'redux/employees/employeesOperations';\nimport { useDispatch } from 'react-redux';\n\nexport const ImagesItem = ({ employeeId, image }) => {\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => setOpenModal(false);\n\n  const handleDeleteImage = imageId => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити це зображення?'\n    );\n    if (confirmDelete) {\n      dispatch(\n        deleteImageFromEmployee({\n          id: employeeId,\n          data: { imageId },\n        })\n      );\n    }\n  };\n\n  return (\n    <Item>\n      <Image\n        src={image.url}\n        alt=\"Документ\"\n        title=\"Відкрити зображення\"\n        onClick={() => setOpenModal(true)}\n      />\n      <DelBtn\n        type=\"button\"\n        title=\"Видалити\"\n        onClick={() => handleDeleteImage(image.id)}\n      >\n        <DelIcon />\n      </DelBtn>\n      <ModalOpenImage\n        isOpen={isOpenModal}\n        handleExitModal={handleExitModal}\n        image={image.url}\n      />\n    </Item>\n  );\n};\n","import { useState } from 'react';\nimport { List, Item, AddBtn } from './ImagesList.styled';\nimport { ModalAddEmployeeImage } from 'components/Modals/ModalAddEmployeeImage/ModalAddEmployeeImage';\nimport { ImagesItem } from '../ImagesItem/ImagesItem';\n\nexport const ImagesList = ({ employee }) => {\n  const [isOpenModal, setOpenModal] = useState(false);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <>\n      <List>\n        {employee.images.map(image => (\n          <ImagesItem key={image.id} employeeId={employee._id} image={image} />\n        ))}\n        <Item>\n          <AddBtn\n            type=\"button\"\n            title=\"Додати зображення\"\n            onClick={() => setOpenModal(true)}\n          >\n            +\n          </AddBtn>\n        </Item>\n      </List>\n      <ModalAddEmployeeImage\n        id={employee._id}\n        handleExitModal={handleExitModal}\n        isOpen={isOpenModal}\n      />\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  updateEmployeeById,\n  deleteEmployeeById,\n} from 'redux/employees/employeesOperations';\n\nimport { calculateAgeToNow } from 'utils/calculateAgeToNow';\n\nimport {\n  Item,\n  Button,\n  Form,\n  EditIcon,\n  SaveIcon,\n  DeleteIcon,\n  Label,\n  Input,\n  Text,\n  Select,\n} from './EmployeesItem.styled';\nimport { ImagesList } from '../ImagesList/ImagesList';\n\nexport const EmployeesItem = ({ employee }) => {\n  const [isEdit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleDeleteEmployee = id => {\n    const confirmDelete = window.confirm(\n      'Ви впевнені, що хочете видалити працівника?'\n    );\n    if (confirmDelete) {\n      dispatch(deleteEmployeeById(id));\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      phone: employee.phone || '',\n      criminal: employee.criminal || false,\n      worksFromDate: employee.worksFromDate || '',\n    },\n    onSubmit: values => {\n      dispatch(updateEmployeeById({ _id: employee._id, data: values }));\n      setEdit(false);\n    },\n  });\n\n  return (\n    <Item>\n      <Form onSubmit={formik.handleSubmit}>\n        <Text>{`Ім'я: ${employee.name}`}</Text>\n        <Label>\n          Телефон:\n          <Input\n            required\n            type=\"text\"\n            id=\"phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          Судимість:\n          <Select\n            required\n            id=\"criminal\"\n            name=\"criminal\"\n            value={formik.values.criminal}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          >\n            <option value={false}>Ні</option>\n            <option value={true}>Так</option>\n          </Select>\n        </Label>\n        {!isEdit && (\n          <Text>{`Працює: ${calculateAgeToNow(employee.worksFromDate)}`}</Text>\n        )}\n        {isEdit && (\n          <Label>\n            Працює:\n            <Input\n              required\n              type=\"date\"\n              id=\"worksFromDate\"\n              name=\"worksFromDate\"\n              value={formik.values.worksFromDate}\n              onChange={formik.handleChange}\n              disabled={!isEdit}\n            />\n          </Label>\n        )}\n\n        {isEdit && (\n          <Button type=\"submit\" title=\"Зберегти зміни\" top=\"40px\" right=\"8px\">\n            <SaveIcon />\n          </Button>\n        )}\n      </Form>\n      <Button\n        type=\"button\"\n        title=\"Редагувати\"\n        onClick={() => setEdit(!isEdit)}\n        top=\"8px\"\n        right=\"8px\"\n      >\n        <EditIcon />\n      </Button>\n      {!isEdit && (\n        <Button\n          type=\"button\"\n          title=\"Видалити\"\n          onClick={() => handleDeleteEmployee(employee._id)}\n          top=\"40px\"\n          right=\"8px\"\n        >\n          <DeleteIcon />\n        </Button>\n      )}\n      <ImagesList employee={employee} />\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectEmployees } from 'redux/employees/employeesSelectors';\n\nimport { List } from './EmployeesList.styled';\nimport { EmployeesItem } from '../EmployeesItem/EmployeesItem';\n\nexport const EmployeesList = () => {\n  const employees = useSelector(selectEmployees);\n  return (\n    <List>\n      {employees.map(employee => (\n        <EmployeesItem key={employee._id} employee={employee} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport {\n  Form,\n  Label,\n  Input,\n  FormCheckbox,\n} from 'components/Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addEmployee } from 'redux/employees/employeesOperations';\n\nexport const ModalAddEmployee = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n      criminal: false,\n      worksFromDate: '',\n    },\n    onSubmit: values => {\n      dispatch(addEmployee(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n      isOpen={props.isOpen}\n    >\n      <Title>Додати працівника</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Ім'я працівника\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Input\n          required\n          type=\"tel\"\n          id=\"phone\"\n          name=\"phone\"\n          label=\"Номер телефона\"\n          value={formik.values.phone}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Label>\n          Працює з:\n          <Input\n            required\n            type=\"date\"\n            id=\"worksFromDate\"\n            name=\"worksFromDate\"\n            value={formik.values.worksFromDate}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          <FormCheckbox\n            checked={formik.values.criminal}\n            onChange={() =>\n              formik.setFieldValue('criminal', !formik.values.criminal)\n            }\n          />\n          Судимість\n        </Label>\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { EmployeesList } from 'components/AdminPage/EmployeesPage/EmployeesList/EmployeesList';\nimport { ModalAddEmployee } from 'components/Modals/ModalAddEmployee/ModalAddEmployee';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getAllEmployees } from 'redux/employees/employeesOperations';\nimport {\n  selectIsLoadingEmployees,\n  selectIsUpdating,\n} from 'redux/employees/employeesSelectors';\n\nconst EmployeesPage = () => {\n  const isLoading = useSelector(selectIsLoadingEmployees);\n  const isUpdating = useSelector(selectIsUpdating);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllEmployees());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <Section paddingBottom={true}>\n      <MainButton\n        type=\"button\"\n        onClick={() => setOpenModal(true)}\n        color=\"var(--white-color)\"\n        position={true}\n      >\n        Додати працівника\n      </MainButton>\n      <SectionTitle>Працівники</SectionTitle>\n\n      <EmployeesList />\n\n      <ModalAddEmployee\n        handleExitModal={handleExitModal}\n        isOpen={isOpenModal}\n      />\n      {isUpdating && <Loading />}\n    </Section>\n  );\n};\n\nexport default EmployeesPage;\n","export const selectEmployees = state => state.employees.items;\n\nexport const selectIsLoadingEmployees = state => state.employees.isLoading;\n\nexport const selectIsUpdating = state => state.employees.isUpdating;\n"],"names":["styled","h3","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","Label","label","_templateObject3","LabelText","p","_templateObject4","Input","TextField","_templateObject5","FormSelect","Select","_templateObject6","SelectOption","MenuItem","_templateObject7","FormCheckbox","Checkbox","_templateObject8","MainContainer","div","AdminContainer","Section","section","props","paddingBottom","SectionTitle","h2","MainButton","button","position","margin","color","MainLinkButton","a","Backdrop","isOpen","Modal","Title","Text","CloseButton","CloseIcon","AiOutlineClose","ModalLayout","_jsx","onClick","e","handleBackdropClick","children","_jsxs","handleExitModal","List","ul","li","calculateAgeToNow","date","startDate","Date","endDate","years","getFullYear","months","getMonth","concat","Item","Button","top","right","EditIcon","FiEdit","SaveIcon","FiSave","DeleteIcon","FiTrash2","select","_templateObject9","input","_templateObject10","AddBtn","ModalAddEmployeeImage","_ref","id","image","setImage","useState","dispatch","useDispatch","target","currentTarget","onSubmit","preventDefault","formData","FormData","append","addImageToEmployee","data","required","type","name","onChange","files","variant","size","Image","img","DelBtn","DelIcon","ModalOpenImage","src","alt","ImagesItem","employeeId","isOpenModal","setOpenModal","url","title","handleDeleteImage","imageId","window","confirm","deleteImageFromEmployee","ImagesList","employee","_Fragment","images","map","_id","EmployeesItem","isEdit","setEdit","formik","useFormik","initialValues","phone","criminal","worksFromDate","values","updateEmployeeById","handleSubmit","value","handleChange","disabled","handleDeleteEmployee","deleteEmployeeById","EmployeesList","employees","useSelector","selectEmployees","ModalAddEmployee","addEmployee","checked","setFieldValue","EmployeesPage","isLoading","selectIsLoadingEmployees","isUpdating","selectIsUpdating","useEffect","getAllEmployees","Loading","state","items"],"sourceRoot":""}