{"version":3,"file":"static/js/635.d281232e.chunk.js","mappings":"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","sources":["components/AdminPage/Modals/ModalLayout.jsx","components/Forms/Forms.styled.jsx","components/Global/Global.styled.jsx","components/AdminPage/EmployeesPage/EmployeesList/EmployeesList.styled.jsx","utils/calculateAgeToNow.js","components/AdminPage/EmployeesPage/EmployeesItem/EmployeesItem.styled.jsx","components/AdminPage/EmployeesPage/EmployeesItem/EmployeesItem.jsx","components/AdminPage/EmployeesPage/EmployeesList/EmployeesList.jsx","components/AdminPage/Modals/ModalAddEmployee/ModalAddEmployee.jsx","pages/Employees/Employees.jsx","redux/employees/employeesSelectors.js"],"sourcesContent":["import { Backdrop, Modal, CloseButton, CloseIcon } from './Modal.styles';\n\nexport const ModalLayout = props => {\n  return (\n    <Backdrop onClick={e => props.handleBackdropClick(e)}>\n      <Modal>\n        <CloseButton onClick={() => props.handleExitModal()}>\n          <CloseIcon />\n        </CloseButton>\n        {props.children}\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Select, TextField, Checkbox, MenuItem } from '@mui/material';\n\nexport const Title = styled.h3`\n  margin-bottom: 20px;\n  text-align: center;\n  color: black;\n  font-size: 24px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: start;\n  flex-direction: column;\n  flex-wrap: wrap;\n  gap: 12px;\n  color: black;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  color: var(--label-color);\n`;\n\nexport const LabelText = styled.p`\n  margin-bottom: 4px;\n`;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n\nexport const FormSelect = styled(Select)`\n  width: 100%;\n`;\n\nexport const SelectOption = styled(MenuItem)``;\n\nexport const FormCheckbox = styled(Checkbox)``;\n","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  @media screen and (min-width: 480px) {\n    max-width: 480px;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  padding: 0 15px;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 12px;\n  margin-bottom: 60px;\n`;\n\nexport const Section = styled.section`\n  padding-top: 40px;\n  // padding-bottom: 40px;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n    // padding-bottom: 80px;\n  }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 11px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 11px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px;\n  flex-basis: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 30px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 60px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Edit = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n`;\n","export function calculateAgeToNow(date) {\n  const startDate = new Date(date);\n  const endDate = new Date();\n  let years = endDate.getFullYear() - startDate.getFullYear();\n  let months = endDate.getMonth() - startDate.getMonth();\n\n  if (months < 0) {\n    years--;\n    months += 12;\n  }\n\n  return `${years} р. ${months} міс.`;\n}\n","import styled from '@emotion/styled';\nimport { FiEdit, FiSave, FiTrash2 } from 'react-icons/fi';\n\nexport const Item = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding: 12px 40px 12px 12px;\n  width: 100%;\n\n  background-color: var(--secondary-bg-color);\n\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-basis: calc(100% / 2 - 15px);\n  }\n  @media screen and (min-width: 1200px) {\n    flex-basis: calc(100% / 3 - 20px);\n  }\n`;\n\nexport const Text = styled.p``;\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: ${props => props.top};\n  right: ${props => props.right};\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  opacity: 0.4;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\nexport const EditIcon = styled(FiEdit)`\n  width: 20px;\n  height: 20px;\n  color: yellow;\n`;\n\nexport const SaveIcon = styled(FiSave)`\n  width: 20px;\n  height: 20px;\n  color: green;\n`;\n\nexport const DeleteIcon = styled(FiTrash2)`\n  width: 20px;\n  height: 20px;\n  color: red;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Select = styled.select`\n  padding: 5px;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  margin-left: 8px;\n  width: 100%;\n  border: none;\n  border-radius: 8px;\n  transition: background-color var(--transition), color var(--transition);\n  :disabled {\n    background-color: transparent;\n    color: var(--white-color);\n  }\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport {\n  updateEmployeeById,\n  deleteEmployeeById,\n} from 'redux/employees/employeesOperations';\n\nimport { calculateAgeToNow } from 'utils/calculateAgeToNow';\n\nimport {\n  Item,\n  Button,\n  Form,\n  EditIcon,\n  SaveIcon,\n  DeleteIcon,\n  Label,\n  Input,\n  Text,\n  Select,\n} from './EmployeesItem.styled';\n\nexport const EmployeesItem = ({ employee }) => {\n  const [isEdit, setEdit] = useState(false);\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      phone: employee.phone || '',\n      criminal: employee.criminal || false,\n      worksFromDate: employee.worksFromDate || '',\n    },\n    onSubmit: values => {\n      console.log(values);\n      dispatch(updateEmployeeById({ _id: employee._id, data: values }));\n      setEdit(false);\n    },\n  });\n\n  return (\n    <Item>\n      <Form onSubmit={formik.handleSubmit}>\n        <Text>{`Ім'я: ${employee.name}`}</Text>\n        <Label>\n          Телефон:\n          <Input\n            required\n            type=\"text\"\n            id=\"phone\"\n            name=\"phone\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          />\n        </Label>\n        <Label>\n          Судимість:\n          <Select\n            required\n            type=\"text\"\n            id=\"criminal\"\n            name=\"criminal\"\n            value={formik.values.criminal}\n            onChange={formik.handleChange}\n            disabled={!isEdit}\n          >\n            <option value=\"false\">Ні</option>\n            <option value=\"true\">Так</option>\n          </Select>\n        </Label>\n        {!isEdit && (\n          <Text>{`Працює: ${calculateAgeToNow(employee.worksFromDate)}`}</Text>\n        )}\n        {isEdit && (\n          <Label>\n            Працює:\n            <Input\n              required\n              type=\"date\"\n              id=\"worksFromDate\"\n              name=\"worksFromDate\"\n              value={formik.values.worksFromDate}\n              onChange={formik.handleChange}\n              disabled={!isEdit}\n            />\n          </Label>\n        )}\n\n        {isEdit && (\n          <Button type=\"submit\" top=\"40px\" right=\"8px\">\n            <SaveIcon />\n          </Button>\n        )}\n      </Form>\n      <Button\n        type=\"button\"\n        onClick={() => setEdit(!isEdit)}\n        top=\"8px\"\n        right=\"8px\"\n      >\n        <EditIcon />\n      </Button>\n      {!isEdit && (\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteEmployeeById(employee._id))}\n          top=\"40px\"\n          right=\"8px\"\n        >\n          <DeleteIcon />\n        </Button>\n      )}\n    </Item>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport { selectEmployees } from 'redux/employees/employeesSelectors';\n\nimport { List } from './EmployeesList.styled';\nimport { EmployeesItem } from '../EmployeesItem/EmployeesItem';\n\nexport const EmployeesList = () => {\n  const employees = useSelector(selectEmployees);\n  return (\n    <List>\n      {employees.map(employee => (\n        <EmployeesItem key={employee._id} employee={employee} />\n      ))}\n    </List>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { ModalLayout } from '../ModalLayout';\nimport { Title } from '../Modal.styles';\nimport { Form, Label, Input, FormCheckbox } from '../../../Forms/Forms.styled';\nimport { MainButton } from 'components/Global/Global.styled';\n\nimport { addEmployee } from 'redux/employees/employeesOperations';\n\nexport const ModalAddEmployee = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n      criminal: false,\n      worksFromDate: '',\n    },\n    onSubmit: values => {\n      dispatch(addEmployee(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <ModalLayout\n      handleExitModal={handleExitModal}\n      handleBackdropClick={handleBackdropClick}\n    >\n      <Title>Додати працівника</Title>\n      <Form onSubmit={formik.handleSubmit}>\n        <Input\n          required\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          label=\"Ім'я працівника\"\n          value={formik.values.name}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Input\n          required\n          type=\"tel\"\n          id=\"phone\"\n          name=\"phone\"\n          label=\"Номер телефона\"\n          value={formik.values.phone}\n          onChange={formik.handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n        <Label>\n          Працює з:\n          <Input\n            required\n            type=\"date\"\n            id=\"worksFromDate\"\n            name=\"worksFromDate\"\n            value={formik.values.worksFromDate}\n            onChange={formik.handleChange}\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </Label>\n        <Label>\n          <FormCheckbox\n            checked={formik.values.criminal}\n            onChange={() =>\n              formik.setFieldValue('criminal', !formik.values.criminal)\n            }\n          />\n          Судимість\n        </Label>\n\n        <MainButton type=\"submit\" color=\"var(--black-color)\" margin={true}>\n          Додати\n        </MainButton>\n      </Form>\n    </ModalLayout>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  Section,\n  HeaderContainer,\n  SectionTitle,\n  MainButton,\n} from 'components/Global/Global.styled';\nimport { EmployeesList } from 'components/AdminPage/EmployeesPage/EmployeesList/EmployeesList';\nimport { ModalAddEmployee } from 'components/AdminPage/Modals/ModalAddEmployee/ModalAddEmployee';\nimport { Loading } from 'components/Loading/Loading';\n\nimport { getAllEmployees } from 'redux/employees/employeesOperations';\nimport { selectIsLoadingEmployees } from 'redux/employees/employeesSelectors';\n\nconst EmployeesPage = () => {\n  const isLoading = useSelector(selectIsLoadingEmployees);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllEmployees());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <Section>\n      <HeaderContainer>\n        <SectionTitle>Працівники</SectionTitle>\n        <MainButton\n          type=\"button\"\n          onClick={() => setOpenModal(true)}\n          color=\"var(--white-color)\"\n        >\n          Додати працівника\n        </MainButton>\n      </HeaderContainer>\n\n      <EmployeesList />\n\n      {isOpenModal && <ModalAddEmployee handleExitModal={handleExitModal} />}\n    </Section>\n  );\n};\n\nexport default EmployeesPage;\n","export const selectEmployees = state => state.employees.items;\n\nexport const selectIsLoadingEmployees = state => state.employees.isLoading;\n"],"names":["ModalLayout","props","onClick","e","handleBackdropClick","handleExitModal","children","Form","styled","Label","LabelText","Input","TextField","FormSelect","Select","SelectOption","MenuItem","FormCheckbox","Checkbox","MainContainer","AdminContainer","HeaderContainer","Section","SectionTitle","MainButton","margin","color","MainLinkButton","List","calculateAgeToNow","date","startDate","Date","endDate","years","getFullYear","months","getMonth","Item","Text","Button","top","right","EditIcon","FiEdit","SaveIcon","FiSave","DeleteIcon","FiTrash2","EmployeesItem","employee","useState","isEdit","setEdit","dispatch","useDispatch","formik","useFormik","initialValues","phone","criminal","worksFromDate","onSubmit","values","console","log","updateEmployeeById","_id","data","handleSubmit","name","required","type","id","value","onChange","handleChange","disabled","deleteEmployeeById","EmployeesList","employees","useSelector","selectEmployees","map","ModalAddEmployee","addEmployee","target","currentTarget","label","variant","size","checked","setFieldValue","isLoading","selectIsLoadingEmployees","isOpenModal","setOpenModal","useEffect","getAllEmployees","Loading","state","items"],"sourceRoot":""}