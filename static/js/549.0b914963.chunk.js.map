{"version":3,"file":"static/js/549.0b914963.chunk.js","mappings":"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","sources":["components/Global/Global.styled.jsx","redux/reporting/reportingSelectors.js","components/AdminPage/ReportPage/ReportTable/ReportTable.styled.jsx","components/AdminPage/ReportPage/ReportTable/ReportTable.jsx","components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm.styled.jsx","components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm.jsx","pages/Report/Report.jsx","utils/formatedDate.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MainContainer = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n\n  max-width: 480px;\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const AdminContainer = styled.div`\n  width: 100%;\n  max-width: 1600px;\n  @media screen and (min-width: 768px) {\n    padding: 0 30px;\n  }\n  @media screen and (min-width: 1200px) {\n    padding: 0 80px;\n  }\n`;\n\nexport const Section = styled.section`\n  padding-top: 80px;\n  padding-bottom: ${props => props.paddingBottom && `80px`};\n\n  // @media screen and (min-width: 768px) {\n  //   padding-top: 80px;\n  //   padding-bottom: ${props => props.paddingBottom && `80px`};\n  // }\n`;\n\nexport const SectionTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n\n  font-weight: 700;\n  font-size: 28px;\n  line-height: 1.17;\n\n  @media screen and (min-width: 1200px) {\n    margin-bottom: 50px;\n\n    font-size: 36px;\n  }\n`;\n\nexport const MainButton = styled.button`\n  ${props =>\n    props.position &&\n    `position: absolute;\n    top: 20px;\n    right: 20px;\n  `};\n\n  margin: ${props => props.margin && `0 auto`};\n  height: 50px;\n  min-width: 200px;\n\n  color: ${props => (props.color ? props.color : 'var(--white-color)')};\n  background-color: transparent;\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n\n  opacity: 0;\n  animation: fadeIn 0.5s ease-in-out forwards;\n`;\n\nexport const MainLinkButton = styled.a`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  min-height: 50px;\n  min-width: 200px;\n\n  box-shadow: 0px 0px 20px var(--accent-color);\n\n  font-weight: 400;\n  font-size: 13px;\n  letter-spacing: 0.07em;\n\n  @media screen and (min-width: 1200px) {\n    font-size: 12px;\n  }\n\n  color: var(--white-color);\n  background-color: transparent;\n\n  border-radius: 25px;\n  border: 1px solid var(--accent-color);\n  cursor: pointer;\n  transition: background-color var(--transition), color var(--transition);\n\n  &:hover,\n  &:focus {\n    background-color: var(--accent-color);\n    color: var(--black-color);\n  }\n`;\n","export const selectOrders = state => state.reports.items;\n\nexport const selectEmployees = state => state.reports.employees;\n\nexport const selectPayments = state => state.reports.payments;\n\nexport const selectIsLoading = state => state.reports.isLoading;\n\nexport const selectError = state => state.reports.error;\n","import styled from '@emotion/styled';\nimport { FiDownload } from 'react-icons/fi';\n\nexport const TableContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  overflow-x: auto;\n  max-width: 100%;\n`;\n\nexport const TableThumb = styled.div`\n  flex-basis: calc(50% - 10px);\n  margin-top: 20px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const FlexContainer = styled.div`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 20px;\n  text-align: center;\n  font-size: 20px;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  background-color: var(--table-background);\n  color: black;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const TableHead = styled.thead`\n  background-color: var(--table-head);\n  color: #fff;\n  text-align: left;\n`;\n\nexport const TableRow = styled.tr`\n  &:nth-of-type(even) {\n    background-color: var(--table-row);\n  }\n`;\n\nexport const TableHeader = styled.th`\n  padding: 10px;\n`;\n\nexport const TableData = styled.td`\n  padding: 10px;\n`;\n\nexport const TableCellServices = styled.td`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    margin: 0;\n    padding: 5px 0;\n  }\n`;\n\nexport const DownloadBtn = styled.button`\n  margin-left: auto;\n  width: 50px;\n  height: 50px;\n  background-color: var(--white-color);\n  border: none;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.5;\n\n  transition: opacity var(--transition);\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const DownloadIcon = styled(FiDownload)`\n  width: 30px;\n  height: 30px;\n  color: var(--download-color);\n`;\n","import ExcelJS from 'exceljs';\nimport { useSelector } from 'react-redux';\n\nimport {\n  selectOrders,\n  selectEmployees,\n  selectPayments,\n} from 'redux/reporting/reportingSelectors';\n\nimport { formatedDate } from 'utils/formatedDate';\n\nimport {\n  TableContainer,\n  TableThumb,\n  FlexContainer,\n  Title,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  TableCellServices,\n  DownloadBtn,\n  DownloadIcon,\n} from './ReportTable.styled';\n\nexport const ReportingTable = () => {\n  const orders = useSelector(selectOrders);\n  const employees = useSelector(selectEmployees);\n  const payments = useSelector(selectPayments);\n\n  const handleDownloadReport = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheetOrders = workbook.addWorksheet('Виконані замовлення');\n    const worksheetEmployeesPayments = workbook.addWorksheet(\n      'Виплата працівникам'\n    );\n    const worksheetPayments = workbook.addWorksheet('Дані про платежі');\n\n    worksheetOrders.addRow([\n      'Час заїзду',\n      'Марка ДНЗ',\n      'Контакти клієнта',\n      'Послуги',\n      'Вартість, грн',\n      'Спосіб оплати',\n      'Адміністратор',\n      'Працівник',\n    ]);\n\n    orders.forEach(order => {\n      worksheetOrders.addRow([\n        formatedDate(order.orderDate),\n        order.serviceObject,\n        order.clientPhone,\n        order.services.map(service => service.name).join(', '),\n        order.discountedCostOrder,\n        order.payment,\n        order.administrator,\n        order.washer,\n      ]);\n    });\n\n    worksheetEmployeesPayments.addRow(['Ім`я', 'грн']);\n\n    employees.forEach(employee => {\n      worksheetEmployeesPayments.addRow([employee.name, employee.payment]);\n    });\n\n    worksheetPayments.addRow(['Категорія', 'Сума, грн']);\n\n    worksheetPayments.addRow(['Всього каса:', payments.totalPayments]);\n    worksheetPayments.addRow(['Всього готівкою:', payments.totalCash]);\n    worksheetPayments.addRow(['Всього терміналом:', payments.totalCard]);\n    worksheetPayments.addRow([\n      'Всього заробітна плата:',\n      payments.totalEmployeesPayments,\n    ]);\n    worksheetPayments.addRow(['Дохід:', payments.profit]);\n\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], {\n      type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'report.xlsx';\n    a.click();\n\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <TableContainer>\n      {orders && orders.length > 0 && (\n        <>\n          <DownloadBtn type=\"button\" onClick={handleDownloadReport}>\n            <DownloadIcon />\n          </DownloadBtn>\n          <Title>Звітність за обраний період</Title>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>Час заїзду</TableHeader>\n                <TableHeader>Марка ДНЗ</TableHeader>\n                <TableHeader>Контакти клієнта</TableHeader>\n                <TableHeader>Послуги</TableHeader>\n                <TableHeader>Вартість, грн</TableHeader>\n                <TableHeader>Спосіб оплати</TableHeader>\n                <TableHeader>Адміністратор</TableHeader>\n                <TableHeader>Працівник</TableHeader>\n              </TableRow>\n            </TableHead>\n            <tbody>\n              {orders.map(order => (\n                <TableRow key={order._id}>\n                  <TableData>{formatedDate(order.orderDate)}</TableData>\n                  <TableData>{order.serviceObject}</TableData>\n                  <TableData>{order.clientPhone}</TableData>\n                  <TableCellServices>\n                    {order.services.map(service => (\n                      <p key={service._id}>{service.name}</p>\n                    ))}\n                  </TableCellServices>\n                  <TableData>{order.discountedCostOrder}</TableData>\n                  <TableData>{order.payment}</TableData>\n                  <TableData>{order.administrator}</TableData>\n                  <TableData>{order.washer}</TableData>\n                </TableRow>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      )}\n      <FlexContainer>\n        {employees && employees.length > 0 && (\n          <TableThumb>\n            <Title>Заробітна плата</Title>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableHeader>Ім'я</TableHeader>\n                  <TableHeader>грн</TableHeader>\n                </TableRow>\n              </TableHead>\n              <tbody>\n                {employees.map(employee => (\n                  <TableRow key={employee.name}>\n                    <TableData>{employee.name}</TableData>\n                    <TableData>{employee.payment}</TableData>\n                  </TableRow>\n                ))}\n              </tbody>\n            </Table>\n          </TableThumb>\n        )}\n        {payments && (\n          <TableThumb>\n            <Title>Розрахунок</Title>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableHeader>Категорія</TableHeader>\n                  <TableHeader>грн</TableHeader>\n                </TableRow>\n              </TableHead>\n              <tbody>\n                <TableRow>\n                  <TableData>Всього каса:</TableData>\n                  <TableData>{payments.totalPayments}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього готівкою:</TableData>\n                  <TableData>{payments.totalCash}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього терміналом:</TableData>\n                  <TableData>{payments.totalCard}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Всього заробітна плата:</TableData>\n                  <TableData>{payments.totalEmployeesPayments}</TableData>\n                </TableRow>\n                <TableRow>\n                  <TableData>Дохід:</TableData>\n                  <TableData>{payments.profit}</TableData>\n                </TableRow>\n              </tbody>\n            </Table>\n          </TableThumb>\n        )}\n      </FlexContainer>\n    </TableContainer>\n  );\n};\n","import styled from '@emotion/styled';\nimport { TextField } from '@mui/material';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  justify-content: center;\n  gap: 30px;\n  padding: 25px;\n  margin-bottom: 40px;\n  color: var(--black-color);\n  background-color: var(--white-color);\n  border-radius: 12px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const DateLabel = styled.label``;\n\nexport const Input = styled(TextField)`\n  width: 100%;\n`;\n","import { useFormik } from 'formik';\nimport { useDispatch } from 'react-redux';\nimport { getReportingByDates } from 'redux/reporting/reportingOperations';\n\nimport { MainButton } from 'components/Global/Global.styled';\nimport { SearchForm, DateLabel, Input } from './ReportSearchForm.styled';\n\nexport const ReportSearchForm = () => {\n  const dispatch = useDispatch();\n  const formik = useFormik({\n    initialValues: {\n      startDate: '',\n      endDate: '',\n    },\n    onSubmit: values => {\n      dispatch(getReportingByDates(values));\n    },\n  });\n  return (\n    <SearchForm onSubmit={formik.handleSubmit}>\n      <DateLabel>\n        Початок\n        <Input\n          required\n          type=\"date\"\n          id=\"startDate\"\n          name=\"startDate\"\n          value={formik.values.startDate}\n          onChange={formik.handleChange}\n          variant=\"standard\"\n          className=\"field\"\n        />\n      </DateLabel>\n      <DateLabel>\n        Кінець\n        <Input\n          required\n          type=\"date\"\n          id=\"endDate\"\n          name=\"endDate\"\n          value={formik.values.endDate}\n          onChange={formik.handleChange}\n          variant=\"standard\"\n          className=\"field\"\n        />\n      </DateLabel>\n      <MainButton type=\"submit\" color=\"var(--black-color)\">\n        Пошук\n      </MainButton>\n    </SearchForm>\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport { Section } from 'components/Global/Global.styled';\nimport { Loading } from 'components/Loading/Loading';\nimport { ReportingTable } from 'components/AdminPage/ReportPage/ReportTable/ReportTable';\nimport { ReportSearchForm } from 'components/AdminPage/ReportPage/ReportSearchForm/ReportSearchForm';\n\nimport { selectIsLoading } from 'redux/reporting/reportingSelectors';\n\nconst ReportingPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <Section paddingBottom={true}>\n      <ReportSearchForm />\n      <ReportingTable />\n      {isLoading && <Loading />}\n    </Section>\n  );\n};\n\nexport default ReportingPage;\n","export function formatedDate(unformatedDate) {\n  const dateTime = new Date(unformatedDate);\n\n  const date = dateTime.toLocaleDateString('uk-UA', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  });\n\n  const time = dateTime.toLocaleTimeString('uk-UA', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return `${date} ${time}`;\n}\n"],"names":["MainContainer","styled","AdminContainer","Section","props","paddingBottom","SectionTitle","MainButton","position","margin","color","MainLinkButton","selectOrders","state","reports","items","selectEmployees","employees","selectPayments","payments","selectIsLoading","isLoading","TableContainer","TableThumb","FlexContainer","Title","Table","TableHead","TableRow","TableHeader","TableData","TableCellServices","DownloadBtn","DownloadIcon","FiDownload","ReportingTable","orders","useSelector","handleDownloadReport","a","workbook","ExcelJS","worksheetOrders","addWorksheet","worksheetEmployeesPayments","worksheetPayments","addRow","forEach","order","formatedDate","orderDate","serviceObject","clientPhone","services","map","service","name","join","discountedCostOrder","payment","administrator","washer","employee","totalPayments","totalCash","totalCard","totalEmployeesPayments","profit","xlsx","writeBuffer","buffer","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","click","revokeObjectURL","length","onClick","_id","SearchForm","DateLabel","Input","TextField","ReportSearchForm","dispatch","useDispatch","formik","useFormik","initialValues","startDate","endDate","onSubmit","values","getReportingByDates","handleSubmit","required","id","value","onChange","handleChange","variant","className","Loading","unformatedDate","dateTime","Date","date","toLocaleDateString","day","month","year","time","toLocaleTimeString","hour","minute"],"sourceRoot":""}